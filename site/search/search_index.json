{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"QubeCL Laser Driver User Manuals &amp; Resources","text":"<p> ppqSense s.r.l  ppqSense Development Team, 2024.05.15  </p> <p> For additional documentation visit ppqsense.com. </p> <p> For additional documentation visit ppqsense.com. </p> <p></p>"},{"location":"downloads.html","title":"Downloads","text":"<ul> <li>Test Download</li> <li>QubeCL Manual Current</li> </ul>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html","title":"Qube Manual V5","text":""},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#qubecl-laser-driver-manual-v5","title":"QubeCL Laser Driver Manual V.5","text":""},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#1-warranty","title":"1. Warranty","text":"<p>ppqSense S.r.l. guarantees its QubeCL System to be free of material and workmanship defects for one year from the date of the original shipment (1-YEAR WARRANTY). This warranty is in lieu of all other guarantees expressed or implied, including any implied warranty of merchantability or \ufb01tness for any particular purpose. ppqSense S.r.l. shall not be liable for any special, incidental or consequential loss. During the warranty period, ppqSense S.r.l. will repair or replace the unit or module, or issue credit, at our option, without charge. ppqSenses liability shall not in any case exceed the cost of correcting defects in the products as explained here, and this service is the sole remedy of the buyer. This warranty does not apply to defects caused by abuse, accident, modi\ufb01cations, Acts of God, or the use of the product for which it was not intended. ppqSense S.r.l. shall not be liable for damages resulting from the use of the product, nor shall be responsible for any failure in the performance of other items to which the purchased product is connected or the operation of any system of which the purchased product may be a part. The QubeCL System should not be used in the manner not speci\ufb01ed by the manufacturer.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#2-specifications","title":"2 Specifications","text":""},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#21-communication-interfaces","title":"2.1 Communication interfaces","text":"Table 1: Communication Interfaces Interface Mode Settings Notes USB Virtual Serial Port 115200 8N1 WiFi Access Point/Client software con\ufb01gurable Optional"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#22-absolute-maximum-ratings","title":"2.2 Absolute maximum ratings","text":"Table 2: Absolute maximum voltage and temperature ratings Parameter Values Unit Notes Operating temperature -20 to +40 \u00b0C Storage temperature -20 to +70 \u00b0C Main power supply voltage (PS LAS ) 26 V No terminal must be connected to ground TEC power supply voltage (PS TEC ) 24 V No terminal must be connected to ground Modulation inputs \u00b1 10 V"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#23-electrical-specifications","title":"2.3 Electrical Speci\ufb01cations","text":"<p>PSLAS=24Vdc,PSTEC=12VdcPS_{LAS}=24V dc, PS_{TEC}= 12 V dcPSLAS\u200b=24Vdc,PSTEC\u200b=12Vdc</p> <p>Warm-up time 120 min, room temperature 25 \u00b0C (unless otherwise noted) </p> <p>Current Generator Specifications</p> Table 3: Current Generator Specifications Parameter Min Typ Max Unit Notes Noise spectral density 100 200 500 pA / \u221aHz test current 200mA Integrated noise 50 100 200 nARMSnA_{RMS}nARMS\u200b 10 Hz - 100 kHz Integrated noise 250 350 500 nARMSnA_{RMS}nARMS\u200b 10 Hz - 1 MHz Stability (1h) 4 5 6 ppmFSppm_{FS}ppmFS\u200b Stability (12h) 5 6 7 ppmFSppm_{FS}ppmFS\u200b Temperature coe\ufb03cient -2 -3 -5 ppmFSppm_{FS}ppmFS\u200b \u00b0 C Voltage compliance 17.5 V <p>Analog Current Modulators Specs</p> Table 4: Analog Current Modulators Specs Parameter Min Typ Max Unit Notes Analog input voltage 0 \u00b1 10 V DC o\ufb00set 20 30 50 \u00b5A input shorted Low Current Noise spect. dens. \ufb02oor 50 100 pA / Hz input shorted Output current 0 \u00b1 5 mA Gain -0.5 mA/V Modulation BW (-3 dB) 2 MHz High current Noise spect. dens. \ufb02oor 200 2000 pA / Hz input shorted Output current 0 \u00b1 100 mA Gain -10 mA/V Modulation BW (-3 dB) 600 kHz <p>Mixed Current Generator Specs - Digital</p> Table 5: Mixed Current Generator Specs - Digital Parameter Min Typ Max Unit Notes Waveforms Sine or Triangle Freq. range 10 \u22123 10 6 Hz Min freq. step 250 mHz Amplitude control res. 12 bits DC o\ufb00set 20 30 50 \u00b5A input shorted Low current Noise spect. dens. \ufb02oor 50 100 pA / Hz input shorted Output current 0 \u00b1 2 . 5 mA Modulation BW (-3 dB) 2 MHz High current Noise spect. dens. \ufb02oor 200 2000 pA / Hz input shorted Output current 0 \u00b1 75 mA Modulation BW (-3 dB) 600 kHz <p>Mixed Current Generator Specs - Analog </p> Table 6: Mixed Current Generator Specs - Analog Parameter Min Typical Max Unit Notes Analog input voltage 0 \u00b1 2 . 5 V DC o\ufb00set 20 30 50 \u00b5A input shorted Low current Noise spect. dens. \ufb02oor 50 100 pA / Hz input shorted Output current 0 \u00b1 2 . 5 mA Gain -1 mA/V Modulation BW (-3 dB) 2 MHz High current Noise spect. dens. \ufb02oor 200 2000 pA / Hz input shorted Output current 0 \u00b1 75 mA Gain -30 mA/V Modulation BW (-3 dB) 600 kHz <p>Temperature Controller Specs </p> <p>&lt;table-caption identifier=\"Table\"id=table-temp-specs} </p> Parameter Min Typical Max Unit Notes Thermistor 1 10 k\u2126 NTC TEC current \u00b1 3 A TEC compl. voltage 20 V Temp stability 40 400 \u00b5K absolute stability in 12h Temp. coe\ufb03cient -90 -100 \u00b5K / K <p>PLL Module Specs</p> <p>Table: PLL Module Specs{#table-pll-specs&gt;</p> <p>Temperature Controller Specs</p> <p></p> Parameter Min Typ Max Unit Notes RF freq. input 10 250 MHz LO freq. input 10 100 MHz Input level -30 0 dBm Input stage gain 0 30 dB Lock bandwidth 800 kHz <p>Pound-Drever-Hall module Specs </p> <p>&lt;table-caption identifier=\"Table\"id=table-pdh-specs}  </p> Parameter Min Typical Max Unit Notes RF freq. input 1 100 MHz LO freq. input 1 100 MHz RF Input level -30 0 dBm LO Input level 5 dBm Lock bandwidth 800 kHz <p>Lock-In Ampli\ufb01er module Specs</p> <p>Table: Lock-In Ampli\ufb01er module Specs{#table-lia-specs&gt;</p> <p>Pound-Drever-Hall module Specs</p> <p></p> Parameter Min Typical Max Unit Notes Demodulation frequency 32768 Hz \ufb01xed Ramp frequency 1 1000 Hz Input voltage noise 30 \u00b5V  RMS Input stage gain 0 60 dB Integration time 1 10000 ms Lock bandwidth 1 kHz"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#3-typical-performance-characteristics","title":"3 Typical performance characteristics","text":"<p>Figure 1: Current noise spectral density comparison with low current modulator</p> <p>Figure 2: Current noise spectral density comparison with high current modulator</p> <p>Figure 3: 24h Current stability over ambient temperature</p> <p>Figure 4: 24h Current stability over time</p> <p>Figure 5: Current temperature coe\ufb03cient</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#4-introduction","title":"4 Introduction","text":"<p>This manual contains information for operating the modular QubeCL system. The QubeCL is a high-performance instrument that provides low-noise and high-ratings electric current and temperature control to drive optoelectronic devices. The QubeCL is particularly suited to drive state of the art semiconductor and Quantum Cascade laser (QCL) sources. This chapter addresses pertinent safety issues and correct usage of this instrument, and de\ufb01nes all front panel connections and LED function indicators. Please, carefully read this chapter before using the QubeCL.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#41-safety-consideration","title":"4.1 Safety consideration","text":"<p>The QubeCL is a versatile instrument that can be used in a variety of driving current and temperature conditions. However, the QubeCL is not intended for a fail-safe operation in hazardous environments or life-threatening situations. The user assumes full responsibility for correct and safe usage of the QubeCL in accordance with any applicable laws, codes and regulations, and standard pertaining to their speci\ufb01c application. ppqSense S.r.l. is not liable for any consequential damage due to misapplication or failure of the QubeCL system.  </p> <p>The QubeCL System is compliant with the following standards:</p> <p>EN 61326-1, EN 55011, EN 61000-4-2, EN61000-4-8, EN61000-4-3</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#42-part-list","title":"4.2 Part List","text":"<p>The QubeCL system is shipped in a package designed to provide excellent protection. The shipping box should be saved for future transportation or storage. Carefully unpack and inspect the following items that are contained in the shipping box.</p> <ul> <li>QubeCL driver, built with a variable number and kind of modules depending on the ordered model.</li> <li>Power supply cable.</li> <li>TC cable, to connect the temperature controller (only included if the QubeCL mounts a Temperature Controller module).</li> <li>USB cable, to connect the QubeCL driver to the controlling PC.</li> <li>USB drive, which contains the required software and drivers.</li> <li>QubePS, switching power supply for the QubeCL driver, if included in the order.</li> </ul>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#43-electrical-power-supply","title":"4.3 Electrical power supply","text":"<p>The QubeCL system must be powered by a unipolar \ufb02oating DC power supply. If the QubePS is not included in the QubeCL kit, a dual channel power supply or two di\ufb00erent power supplies are necessary to independently drive the Current Generator [CM] and the Temperature Controller [TC] modules. </p> <p>CM modules must be powered by a DC power supply providing 24 V and at least 3 A for a versatile usage and for a full compliance to the declared performances and dynamic range.</p> <p>TC modules must be powered by a DC power supply providing 12 V and 4 A, for a versatile usage and to guarantee performances of the TC module.</p> <p>User must refer to  for minimum, maximum and typical allowable voltages for power supply of the QubeCL. Please, note that using source voltages that di\ufb00er from the ones indicated as typical , even if in between the maximum and minimum values, may lead to poor calibration of the QubeCL driver or to potentially damaging heat generation.</p> Table 7: Power source voltages speci\ufb01cations DC Input minimum typical maximum LAS +20 V +24 V +30 V TEC +8 V +12 V +24 V <p>CAUTION: Floating Power Supplies Only</p> <p>Power supplies used to source the QubeCL drivers must be \ufb02oating power supplies. The terminals of the power supply must not be connected to Earth or to one another in any circumstance.</p> <p>If the QubePS power supply is included in the QubeCL kit, the user has simply to connect the QubePS to the QubeCL with the dedicated cable delivered within the box. The power cord needed to connect the QubePS to the electrical outlet is not provided.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#44-connectors-and-led-indicators-functions","title":"4.4 Connectors and LED indicators functions","text":"<p>A schematic view of the front panel of the QubeCL can be seen in . The image represents a QubeCL15TL, being a QubeCL equipped with a 1.5 A current generator, Temperature Controller module and Phase-Locked Loop module. Below, a list of the connectors and LEDs present on the front panel can be found, along with their description: </p> <p>Connectors:</p> <ul> <li> <p>C1. Power: power supply connector of the instrument.</p> </li> <li> <p>C2. USB: this USB port must be used to connect the QubeCL to an host computer in order to control and supervise its operations.</p> </li> <li> <p>C3. TEMP out: used to connect the supplied TC cable for the temperature control of the driven device. It provides NTC (10k) temperature sensor input and TEC output (2.7A maximum).</p> </li> <li> <p>C4. CURRENT out: Output SMA connector. The driver supplies the current through this connector to the controlled laser device. A proper SMA cable must be provided by the user. The output provides a maximum current corresponding to the limits of the installed CM modules of the QubeCL (for example 1.5A for a QubeCL with one CM10 and one CM05 modules), with a maximum output voltage compliance of 17.5 V.</p> </li> <li> <p>C5/C6. MOD\u00bd in: Input SMA connectors. May be used to source \ufb01nely controlled modulating signals to the laser current, with the amplitude proportional to the applied control voltages.</p> </li> </ul> <p>Figure 6: QubeCL15TP front panel</p> <p>LED indicators:</p> <ul> <li> <p>L1. CONNECT: Green. Switched on when the QubeCL driver is connected to an host PC through its USB port.</p> </li> <li> <p>L2. CUR ON: Yellow. Switched on when the QubeCL sources current from C4 Current out connector to the controlled laser.</p> </li> <li> <p>L3. MOD ON: Yellow. Switched on when the modulation signals are enabled.</p> </li> <li> <p>L4. PWR ON: Green. Switched on when the QubeCL main unit is powered on.</p> </li> <li> <p>L5. TC unlock: Red. Switched on when the temperature of the controlled device is di\ufb00erent with respect to the temperature set-point value.</p> </li> <li> <p>L6. TC lock: Green. Switched on when the temperature of the controlled device is locked and equal to the temperature set-point value.</p> </li> </ul> <p>The list only comprehends the LEDs and connectors that are present on the majority of the QubeCL possible con\ufb01gurations. A detailed description of PLL module, along with other application-speci\ufb01c modules, can be found further below in this manual.  </p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#441-power-connector","title":"4.4.1 Power connector","text":"<p>The QubeCL kit comes with a dedicated power supply cable to con- nect the QubeCL to its power supply. One of the ends of the QubeCL power cable is already equipped with a 10 poles connector compatible with the one present on the QubeCL driver (see ). If the QubePS is provided with the kit, the cable is ready to be directly plugged into the QubePS connector.</p> <p>Figure 7: Power connector pin diagram</p> <p>Alternatively, when the QubePS is not provided, the cable is equipped with four plugs to be connected to the power supplies.  </p> <p>The four plugs can be identi\ufb01ed as the subsequent ones:</p> <ul> <li>two for CM power supply (green-labelled PS Las +, white-labelled PS Las -)</li> <li>two for TC power supply (red-labelled PS TEC +, yellow-labelled PS TEC -).</li> </ul>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#442-tec-connector","title":"4.4.2 TEC connector","text":"<p>Figure 8: TEC connector pin diagram</p> <p>If the QubeCL is equipped with the TC module, but not with a laser-housing mod- ule, a proper connection with the Peltier- based stage of the laser and with the NTC temperature sensor must be established. The QubeCL kit includes a TEC cable with one of its ends already equipped with the proper connector to be plugged into the TC module.  </p> <p>The user must adapt the other end of the TEC cable in order to connect it to the laser. Please, refer to the wires colors represented in  to properly connect the TEC ca- ble to the laser.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#45-qubecl_control-software-installation","title":"4.5 QubeCL_Control software installation","text":"<p>Every QubeCL system, regardless of the speci\ufb01c model, can be controlled by the mean of the same Control Software, which comes in the USB key included in the QubeCL kit. The QubeCL_Control software has been developed under LabView Runtime Environment .</p> <p>To install the QubeCL_Control software on Windows OS, please follow these steps. All the needed softwares are provided inside the USB key that comes inside the QubeCL kit.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#installation-steps","title":"Installation Steps","text":"<ol> <li>Run the library installation application to install the following libraries and drivers:<ul> <li>Microcontroller USB-driver (<code>CDM21228_Setup</code>)</li> <li>LabVIEW NI-VISA Utilities (<code>NIVISA1600full</code>)</li> </ul> </li> <li>Copy the directory <code>/QubeCL_CONTROL:vX.X</code> and all its content in a directory of your choice in the computer.  </li> </ol> <p>More information can also be found in the readme.txt \ufb01le in the main directory of the USB key.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#5-basic-operation-current-and-temperature-controls","title":"5 Basic operation: current and temperature controls","text":"<p>This chapter explains the typical set-up and operation of a QubeCL system composed by a CM module (or a stack of several of them) and a TC module. This chapter should help less experienced users to rapidly adapt the QubeCL system to drive their speci\ufb01c optoelectronic devices. Keep in mind that not all the possible operations of the QubeCL system with a speci\ufb01c controlled device can be adequately addressed in this manual: these are general guidelines for operating a QubeCL system with speci\ufb01c illustrative examples. Adequate parameter values must be considered by the users when controlling a speci\ufb01c device.  </p> <p>The QubeCL is built with a modular approach, with each module being in charge of performing a speci\ufb01c function. This chapter describes the usage of a QubeCL which includes one CM and one TC module. The functions of those modules are, respectively:</p> <ul> <li>To provide a very low-noise and high-level DC current to drive one optoelectronic device;</li> <li>To provide the optoelectronic device temperature stabilization at a few mK level.</li> </ul>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#51-set-up","title":"5.1 Set-up","text":"<p>The typical set-up to operate with a QubeCL system is composed by the QubeCL itself, the laser device, a DC power supply and a PC for overall control.  </p> <p>To correctly operate with the QubeCL, the following step must be followed:</p> <p>If the QubeCL kit includes a QubePS power supply:</p> <ul> <li>simply connect the QubeCL to the QubePS with the dedicated cable available in the kit.</li> </ul> <p>Otherwise, if the QubePS is not included:</p> <ul> <li>Set the voltage values of the \ufb02oating power supplies you\u2019re using following the indication from the dedicated section of this manual.</li> <li>Connect the QubeCL to the power supply by the mean of the provided cable  </li> <li>Connect TEC+++ and TEC\u2212-\u2212 to the +/\u2212+/-+/\u2212 poles of the power supply selected channel for electrical supply of the TC module, respectively.  </li> <li>Connect LAS+++ and LAS\u2212-\u2212 to the +/\u2212+/-+/\u2212 poles of the power supply selected channel for electrical supply of the CM module(s), respectively.</li> </ul> <p>CAUTION -- RESPECT THE POLARITY</p> <p>If not using a QubePS be sure to RESPECT THE POLARITY of the power supply cable. REVERSE voltages will damage the instrument. In case you\u2019re not using a dual-channel power supply, but two different power supplies, please switch on the TC supply before the CM supply otherwise the QubeCL won\u2019t boot correctly.</p> <ul> <li> <p>Connect the provided power supply cable to the C1 connection of the main unit module of the QubeCL system.</p> </li> <li> <p>Connect the provided USB cable to the C2 connection of the main unit module of the QubeCL system.</p> </li> <li> <p>Connect the provided TC cable, properly wired to the laser, to the C3 connector of the TC module of the QubeCL system (N.B. This operation is not necessary if the QubeCL includes a laser housing module).</p> </li> <li> <p>Connect the user provided laser device current cable to the SMA C4 connector of the LH module of the QubeCL system (N.B. This operation is not necessary if the QubeCL includes a laser housing module).</p> </li> <li> <p>Optional: connect a signal generator(s) to the modulation inputs of the QubeCL (SMA C5-C6 connectors of the LC module).</p> </li> </ul>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#52-operating-with-the-control-software","title":"5.2 Operating with the Control Software","text":"<p>In this section the usage of the Control Software to manage the basic operation of the QubeCL is described in detail.</p> <p>Figure 9: QubeCL control software main screen</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#521-connecting-to-the-qubecl","title":"5.2.1 Connecting to the QubeCL","text":"<p>To use the QubeCL_Control software, locate the directory where you\u2019ve previously placed the <code>/QubeCL_CONTROL:vX.X</code> folder from the USB key and launch the <code>QubeCL_Control_vX.X.exe</code> application. </p> <p>A graphical interface as the one showed in  will be displayed. While the program search for connected QubeCLs to the computer, a progress bar will be displayed. Once the search is done, it will be possible to select the desired QubeCL from the INSTRUMENT ADDR drop-down menu. Once selected, launch the program by pressing the CONNECT button.</p> <p></p> <p>If the program fails to detect any connected QubeCL, an error windows as the one shown here pops up. From there it will be possible to stop the program with the EXIT button or manually select a connected driver by the COM port to which it is connected.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#522-qubecl_control-appearance","title":"5.2.2 QubeCL_Control appearance","text":"<p>The GUI of the control software is subdivided into three main horizontal panels:</p> <p>Figure 10: The QubeCL_Control software con\ufb01guration panel</p> <p>The Con\ufb01guration panel at the top () there can be found:</p> <ul> <li> <p>INSTRUMENT menu: allows the selection of the QubeCL that the user wants to connect to. The connection can be established only at the start-up of the program, it is not possible to switch to another QubeCL instrument without restarting the control software.</p> </li> <li> <p>CONNECT and DISCONNECT buttons: allow the connection and disconnection to the selected QubeCL. (DISCONNECT also stops the program).</p> </li> <li> <p>CURRENT LIMIT menu: by pressing this button, another window will be displayed, allowing the user to change the maximum limit for the current that the QubeCL can deliver to the laser.</p> </li> <li> <p>System information menu: shows some information about the QubeCL to which the software is connected, such as \ufb01rmware version, instrument model and serial number.</p> </li> <li> <p>Power ON indicators: above the CONNECT and DISCONNECT buttons, two LEDs show the status of the power source to the CM (called MAIN) and TC modules.</p> </li> </ul> <p>Figure 11: The QubeCL_Control software current driver panel</p> <p>The Current driver panel is the middle one  there can be found:</p> <ul> <li> <p>Current setpoint: from there, the user can change the current that needs to be sourced by the QubeCL to the laser. Three di\ufb00erent controls allow the user to change this value:</p> <ul> <li> <p>A numerical value expressed in mA can be directly typed into the dedicated form;</p> </li> <li> <p>A horizontal slider, to the left of the numerical value, can be used to set the current;</p> </li> <li> <p>Four buttons can be used to increment or decrement the current by \ufb01xed steps. The desired amplitude for the steps can be typed in the two dedicated forms below the arrow buttons.</p> </li> </ul> </li> <li> <p>Iout button: enables/disables the current output of the QubeCL. This button includes a green LED indicator. This LED is switched ON when the QubeCL is delivering current to the laser. Once the user switches o\ufb00 the current, the button becomes gray and the QubeCL gradually lowers the current sourced to the laser until it is completely switched o\ufb00. The LED will be switched o\ufb00 only when the current is.</p> </li> <li> <p>Mod En button: enables/disables all the modulation channels;</p> </li> <li> <p>M1 and M2 buttons: activate/deactivate the modulation channels built on board of the QubeCL. By enabling those channels, modulating currents can be injected over the bias current;</p> </li> <li> <p>Save button: saves the parameters currently set in this panel to the ROM memory of the QubeCL. Those values will be recalled from the memory at the next startup of the QubeCL driver;</p> </li> <li> <p>Readings window: shows the values of the output current ( Ilas ) and voltage ( Vlas ) as well as the supply voltage ( Vcc );</p> </li> <li> <p>Current plot: shows the temporal behaviors of the set current (orange trace) and the actual output current (purple trace). This plot won\u2019t show any modulation signal that may be applied to the output current.</p> </li> </ul> <p>Figure 12: The QubeCL_Control software temperature control panel</p> <p>The Temperature control panel  where the subsequent commands can be found:</p> <ul> <li> <p>Temp. SetPoint: sets the desired operating temperature for the laser, expressed in \u00b0C.</p> </li> <li> <p>Temp. Read: returns the value of the temperature measured on the laser using its NTC sensor, expressed in \u00b0C.</p> </li> <li> <p>TStab button: turns on/o\ufb00 the temperature stabilization of the laser.</p> </li> <li> <p>Loop sign +/\u2212+/-+/\u2212 button: allows the user to change the sign of the temperature stabi- lization loop, e\ufb00ectively switching its behavior from heating to cooling and vice versa.</p> </li> <li> <p>Temperature PID parameters panel: the TEC module stabilizes the temperature of the laser by the mean of a PID correction loop. This window allows the user to change the values of the three functional parameters of the PID, both with sliders and textual inputs. Detailed instruction can be found below.</p> </li> <li> <p>Save button: saves the setpoint, loop sign, PID gains and Tstab status on the ROM memory of the QubeCL so that they can be used as default at next switch on.  </p> <ul> <li>N.B. This command also saves the status of Tstab, hence if the Save button is pressed when the temperature stabilization is active, the QubeCL will automatically start to stabilize the temperature once it gets powered up. If this behavior is unwanted, Save button must be pressed when the temperature stabilization is inactive.</li> </ul> </li> <li> <p>Temperature and TEC current plots: switching from one to another, the user can have a look over the temporal behavior of the readed and setpoint temperatures of the laser and of the current erugated by the TC module.</p> </li> </ul>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#53-operation","title":"5.3 Operation","text":"<p>Once the QubeCL has been correctly set-up, the e\ufb00ective operations can begin following the steps listed below:</p> <ul> <li> <p>Turn on the \ufb02oating power supply (or the QubePS if it is comprised in the kit) to supply the instrument. LED L4 (green) lights on. LED L5 (red) lights on, meaning that the laser temperature is not stabilized. If the TC parameters where saved with active temperature stabilization, the QubeCL will automatically start to stabilize the temperature. If it manages to do so, L5 switches o\ufb00 and L6 (green) switches ON.</p> </li> <li> <p>Once you connect the USB cable to the QubeCL, LED L1 (green) switches ON.</p> </li> <li> <p>Start the QubeCL_control program, wait until it detects the connected QubeCL(s), chose the one you want to connect to and press the blinking CONNECT button.</p> </li> <li> <p>The \ufb01rst thing to do when starting to work with a new set-up, is to set all the safety parameters o\ufb00ered by the QubeCL:</p> <ul> <li> <p>In the con\ufb01guration panel, set the maximum current limit following the maximum current limit indicated in your laser device datasheet and/or test report. Once set, if the user tries to set a current higher than this maximum value, the software will cap it to the maximum value.</p> </li> <li> <p>In the TC Advanced section of the Advanced tab (), that can be found in the lower panel, use the TEC limit control to set the maximum current that the TC controller may source to the Peltier stage. To do so, you must press the correspondent CHANGE button.</p> </li> </ul> </li> </ul> <p>Figure 13: The QubeCL_Control software Advanced tab</p> <p>Once the safety values are set, the user may start to operate the QubeCL.</p> <p>Before turning on the current driver, it is necessary to stabilize the temperature of the laser. This can be done by the QubeCL if the TC module is included in the device con\ufb01guration.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#531-temperature-control-operation","title":"5.3.1 Temperature control operation","text":"<p>This sequence of operation has to be performed only if the QubeCL houses a TC module, being in charge of temperature stabilization of the laser. All the necessary controls can be found in the Temperature Controller tab, in the lower panel of the GUI.</p> <ul> <li> <p>In the Temp SetPoint form, set the temperature at which the laser device has to be stabilized. QubeCL accepts value with a precision down to the second decimal place. The temperature setpoint can be changed at any time during the operations.</p> </li> <li> <p>Set the I and D parameters of the PID controller to 0.0 and P to a middle value.</p> </li> <li> <p>Press the Tstab button to activate the temperature stabilization:</p> </li> <li> <p>Once done, TStab button turns orange, LED L5 lights red indicating that the desired temperature has not been reached yet.</p> <ul> <li> <p>At \ufb01rst, check the temperature plot on the GUI, if the measured temperature drifts towards the desired setpoint, the sign of the loop is the correct one. Other- wise, if the measured temperature drifts away from the setpoint, it is necessary to switch the sign of the loop using the dedicated sign buttons.</p> </li> <li> <p>Increase the I gain searching for an oscillating behavior of the measured temper- ature around the setpoint. Tstab button will become green each time the measured temperature stays in a range of 20 mK around the setpoint. Similarly, LED L5 will turn o\ufb00 and LED L6 will turn on in this range.</p> </li> <li> <p>Adjust P and I parameters trying to reduce the oscillating behavior as much as possible, while also reducing the time needed to the measured temperature to converge to the setpoint. At last, TStab must be constantly green, LED L5 turned o\ufb00 and LED L6 turned on.</p> </li> </ul> </li> </ul> <p>Once the Temperature Controller parameters have been set to the optimal ones, it is possible to store them in the QubeCL ROM memory using the Save button in the Temperature Controller tab to have them as default from now on. Remember that the save button will also store the stabilization status, meaning that if the Temperature Controller were active while saving, it will automatically start to stabilize the laser once the QubeCL is switched on again.</p> <p>To operate the Temperature Controller at best of its performance, please keep in mind the following characteristics:</p> <ul> <li> <p>If the heatsink of the laser is unable to dissipate enough heat, its temperature will gradually raise. If so, the Temperature Controller will have to correct an increasing temperature di\ufb00erence, being forced to constantly, even if slowly, increase its current output, eventually reaching the maximum value. Once reached, the Temperature Controller will be unable to further stabilize the temperature of the laser. To avoid this behavior, it is su\ufb03cient to check if the current sourced by the temperature controller is not constantly drifting towards one of its maximum values. Otherwise, a better heat management would be necessary.</p> </li> <li> <p>The Temperature Controller includes a safety behavior in order to avoid to operate with a not stabilized laser for long time. Once the temperature stabilization is activated, the Controller constantly check the di\ufb00erence between the measured temperature and the setpoint. At each check, the di\ufb00erence is summed to the previoulsy measured ones. If the measured temperature crosses the setpoint, the sum is set back to 0. If the sum goes over a certain threshold, the Temperature Controller raises an error, meaning that is was not capable of stabilize the laser Temperature. The threshold can be chosen with the ErrorSumLim parameter which is present in the Advanced Tab. This limit can be increased if it is too short and causes errors to be raised even when the Controller is converging toward stabilization. An higher threshold would nevertheless increase the time before an error raises when the Temperature Controller is e\ufb00ectively failing to stabilize the laser temperature.</p> </li> </ul>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#532-current-control-operation","title":"5.3.2 Current control operation","text":"<p>Once the laser temperature is stabilized, the user can start to source current to it. The necessary controls are grouped together in the current driver panel of the GUI.</p> <ul> <li> <p>The desired current value can be typed into the form present in the Current Setpoint section of the panel. The value of the current setpoint can also be changed with the up and down arrows or with the slider close to the form. The buttons and the knob in the Fine Current Tuning tab enable the user to \ufb01nely control the current setpoint value. The Output Current setpoint may be changed at any moment during the operations.</p> </li> <li> <p>Once the setpoint is set, the current generator can be switched on by pressing the Iout button. A click noise must be heard coming from the QubeCL, while the sourced current plotted on the GUI (purple line) gradually rises towards the setpoint (orange line). The QubeCL constantly monitors the value of the current sourced to the laser and the value of the voltage across the laser. The two values are shown in the Readings panel along with the Power Source voltage monitor.</p> </li> <li> <p>If a modulation of the laser current is needed, it can be applyed by enabling the ModEn button, which in turn will give the user the ability to switch on the M1 and M2 buttons. In order for the modulation to be sourced to the laser, there must be a modulating signal connected to the dedicated inputs of the QubeCL or a signal generated by an onboard DDS module. This matter is examined in detail in a subsequent chapter. The ModEn button is not active for 10 seconds starting from the current being switched on, so that the modulations can be applied only when the current to the laser is stable. Modulations will be automatically switched o\ufb00 when the current is.</p> </li> </ul> <p>The parameters for the Current Generator can be stored in the ROM memory of the QubeCL to be used as default when the QubeCL is switched on by clicking the Save button. Unlike the Temperature Controller, save button of the current control panel will not save the Current Generator status, hence the QubeCL never automatically starts to source current to the laser when it gets switched on.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#533-automatic-protections","title":"5.3.3 Automatic protections","text":"<p>QubeCL continuously monitors a variety of functional parameters both of the laser and of the QubeCL driver itself. The data acquired allows the QubeCL to implement a series of automatic protections to operate as safe as possible, avoiding damage to the QubeCL and, most importantly, to the laser device. The QubeCL driver implement the following protection for the Current Generator:</p> <p></p> <p>Open-circuit protection: this safety measure con- stantly checks if the electrical connection with the laser is still present, otherwise the Current Generator is immediately switched o\ufb00 and the QubeCL output is shorted. If this condition is detected, a blinking warning sig- nal appears on the GUI, next to the Vlas indicator in the Readings box of the Current Generator panel.</p> <p>Compliance Limit reached: the same warning described above is raised if the QubeCL senses a voltage across the laser higher than the maximum allowed compliance voltage. Such Compliance Limit [CL] voltage depends on the nominal Source Voltage for the Current Generator and can be obtained as CL=(0.77\u22c5Vcc)\u22121CL = (0.77 \u00b7 Vcc) - 1CL=(0.77\u22c5Vcc)\u22121.</p> <p></p> <p>Low Voltage Supply protection: if the CM module supply voltage falls below 18.5 V, the QubeCL automatically switches o\ufb00 the current and shorts the output connector. A blinking warning signal appears on the GUI, next to the Vcc monitor in the Readings panel.</p> <p>Note</p> <p>The previously described errors will not be deasserted if the warning condition is not met anymore (for example, if the Supply Voltage raises again above 18.5 V). This behavior has been implemented to avoid the warning to go unnoticed in case the user were not monitoring the GUI or the QubeCL_Control program were not running when the error condition happened. Once the cause of the error condition has been eliminated, the user can reset the errors by switching on the current generator.</p> <p>The QubeCL also monitors the temperature of the laser, implementing some safety features to prevent potentially dangerous conditions:</p> <p></p> <p>TEC module communication fault: if some problem oc- curs to the communication with the TEC module (i.e. when the module is not properly powered) the Temp Read value becomes -273 \u00b0C, and a warning box appears next to it (see Figure at right). The warning disappears as soon as the com- munication with the TEC is re-established.</p> <p>Temperature sensor fault: in case the temperature sensor is not working properly (i.e. it is not connected to the TEC module), the Temp Read value becomes -67.737 \u00b0C and the warning square box appears next to the readed value.  </p> <p></p> <p>In case one of the above problems occur when the Temper- ature Stabilization is active, a warning box appears also next to the Temp Read line. If the QubeCL is sourcing current to the laser when a Temperature Controller fault is detected, the current source is disabled to prevent damage to the laser.</p> <p></p> <p>Temperature stabilization problem: if, for any reason, the Temperature Controller modules fails to stabilize the laser temperature (i.e. wrong PID sign, poor heat management), the QubeCL disables both Temperature Stabilization and Cur- rent output to the laser. A warning box appears next to the Temp Read line. The threshold above which a Temperature stabilization is raised can be changed by acting the Error Sum Lim parameter in the Advanced tab, as previously described.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#6-advanced-operations-modulators-and-dds","title":"6 Advanced Operations (Modulators and DDS)","text":"<p>Besides the basic functionality, QubeCL may perform a variety of advanced operations while driving a laser device. As well as the basic functions, the advanced ones are performed by dedicated modules.</p> <p>The laser Head (LH) module is the one deputed to the connection to an external laser and, besides providing all the necessary switches and safety features, it also includes two current modulator circuits.</p> <p>The modulator circuits onboard of the LH are capable of directly injecting current to the laser, superimposing their output signal over the DC bias current sourced by the Current Generator. The modulating current signal generated by the modulators is proportional to the input signal that is applied to the dedicated inputs on the LH module. If we denote the modulation current with Imod , the input control voltage with Vin and the absolute value of the gain in mA/V with G , the modulation current is equal to:</p> <p>Imod=\u2212G\u22c5Vin Imod = \u2212G \u00b7 Vin Imod=\u2212G\u22c5Vin</p> <p>This means that a positive control voltage will subtract current from the laser bias current while a negative control voltage will add the modulating current to the DC bias. The two modulators can be activated ad the same time, in which case their output signals would arithmetically add together. The two modulators are built in order to cover all the possible needs that may arise while driving a laser:</p> <ul> <li> <p>Low current modulator: this modulator has a lower V/I Gain. It allows the user to modulate the bias current with signals down to tens of nA with great precision and low added noise.</p> </li> <li> <p>High current modulator: this modulator has higher Gain, allowing to modulate the Bias current with signals up to tens of mA, allowing the user to perform large scans.</p> </li> </ul> <p>The gain values for the two modulators can be found in the QubeCL datasheet and in the test report that comes along with the instrument.</p> <p>CAUTION: Current Overload Risk</p> <p>The high current modulator can provide currents up to tens of mA which can be added to or subtracted from the bias current of the laser. When sourcing negative control voltages to the modulators, the modulating current is added to the bias current, in this case the total current may exceed the maximum current allowed by the laser. Therefore it is necessary to be very careful to avoid the risk of damaging the laser itself.  </p> <p>The maximum current value that the user can set on the QubeCL does not comprehend the modulating signal, being just referred to the sourced Bias Current. The QubeCL does not perform any safety check on the overall Output Current value resulting as the Bias Current with the superimposed modulation signals.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#61-the-dds-sub-module","title":"6.1 The DDS sub-module","text":"<p>Figure 14: Appearance of the LH module equipped with the DDS sub-module</p> <p>The LH module may host a smaller sub-module, namely the DDS sub-module. DDS stands for Direct Digital Synthesis, being a digitally controlled electronic circuits capable of generating analog signals with the ability of controlling some of their parameters (being Amplitude, Frequency, Phase and Waveform). </p> <p>This sub-module adds two DDS circuits to the LH module, enabling the QubeCL to generate its own modulating signals without needing an external signal generator connected to the Modulation inputs. Since the DDS sub-module is housed inside the LH module, it won\u2019t modify the physical dimensions of the QubeCL driver. The generated signals are directly injected into the DC bias current similarly to the signals from the externally sourced modulators.  </p> <p>When the QubeCL also includes a PDH or LIA module, the DDS sub-module is capable of interacting with them, providing all the synchronous signals that are necessary for those two modules to perform their operations. For more information, please check the chapters dedicated to the PDH and LIA modules.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#611-connectors","title":"6.1.1 Connectors","text":"<p>The presence of the DDS sub-module adds some feature to the QubeCL and consequently some minor modi\ufb01cation to the LH module interconnections are present. The three standard connectors previously described are still present, but the connector C7 is added on the left side of the module, as it is shown in , C7 is an output SMA connector. The DDS module is capable of generating a 5 V square- wave synchronization signal which is sourced from the low impedance output on C7. The user may chose to synchronize this signal both to the waveform sourced by DDS1 or to the waveform sourced by DDS2.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#612-control-software-interface","title":"6.1.2 Control Software interface","text":"<p>The QubeCL _Control Software includes a section dedicated to the control of the DDS module functionalities. The section can be accessed in the lower part of the GUI by selecting the DDS tab , which is shown in .  </p> <p>Figure 15: The DDS control panel of the QubeCL_Control Software</p> <p>The DDS control tab is subdivided into three panels:</p> <ul> <li> <p>The Sync. Channel panel includes the controls for the external synchronization signal.</p> </li> <li> <p>The Channel 1 and Channel 2 panels include all the interfaces to properly control the characteristics of the signal generated by the two DDS circuits.</p> </li> </ul> <p>The Sync. Channel panel allows the user to select to which DDS the external synchroniza- tion channel must be synchronized. To do so, the GUI shows the Sync. frequency selector. Below the selector, a read-only form shows the actual frequency of the synchronization signal, which is equal to the one of the selected DDS channel.</p> <p>Above the Sync. Channel panel, the Save param. button allows the user to store the current parameters into the ROM memory of the QubeCL so that they can be restored at the next switch on of the driver.</p> <p>The Channel 1 and Channel 2 panels contain the same controls, replicated for the two DDS circuits:</p> <ul> <li> <p>ENABLE: this button activates the DDS circuit, sourcing the synthesized signal to the laser. Note that the DDS circuits share the same signal paths of the external modulators, hence it is necessary to activate the modulators from the Current Control panel in order for the DDS signal to be sourced to the laser.</p> </li> <li> <p>WAVEFORM: this control allows the user to chose the waveform of the signal synthe- sized by the DDS circuit. The available options are Sine wave and Triangular wave.</p> </li> <li> <p>AMPLITUDE: this form allows the user to set the peak-to-peak amplitude of the modulating signal, expressed in mA. The value can also be modi\ufb01ed by using the up and down arrows next to the form.</p> </li> <li> <p>FREQUENCY: allows the user to set the frequency of the modulating signal.</p> </li> <li> <p>PHASE: allows the user to set the phase of the modulating signal.</p> </li> </ul>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#613-dds-operations","title":"6.1.3 DDS operations","text":"<p>To operate with the DDS module, follow the steps listed below:</p> <ul> <li> <p>Activate the Temperature Controller (if present) and the Current Generator as previously described in this manual. Wait until it is possible to interact with the Modulation Enable controls on the Current Control panel.</p> </li> <li> <p>Activate the overall Modulation Enable button and the enable(s) for the desired mod- ulation channel(s).</p> </li> <li> <p>In the DDS tab, set the desired parameters for the modulating signal (Amplitude, Fre- quency, Phase, Waveform) and activate the DDS with the ENABLE button. Even when the DDS sub-module is present, it is still possible to modulate the laser cur- rent with the external modulators. The internally generated signal(s) and the externally applied one(s) will be added together and injected over the DC bias current.</p> </li> <li> <p>The parameters of the synthesized signal can be changed at any time during the oper- ation.</p> </li> <li> <p>If needed, the External Synchronization Signal can be used as a trigger source for an oscilloscope, to synchronize its acquisition with one of the DDS generated signals.</p> </li> <li> <p>Disable the DDS-generated signal by deactivating the corresponding ENABLE button when it\u2019s not needed anymore.</p> </li> </ul> <p>Detailed instructions on how to use the DDS sub-module in pair with the PDH or LIA modules, if present, can be found in the respective chapters.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#7-advanced-operations-pll-module","title":"7 Advanced Operations - PLL module","text":"<p>The PLL module gives to the QubeCL instrument the capability of easily perform a complex task such as the phase-lock of the controlled laser frequency to a reference source. The PLL module requires two input signals: the radio-frequency ( RF ) signal generated by the beatnote between the controlled laser and the reference laser and the signal from a Local Oscillator ( LO ) used as a set-point for the RF signal. When the PLL is activated, a current proportional to the phase error signal is processed by a Proportional-Integral ( PI ) stage and internally added to the bias current in order to close the phase-stabilization loop. The RF and LO frequencies can be divided by an integer value by the mean of a frequency divider, in order to obtain two signal with similar frequencies at the input of the internal phase-detector. Each divider can be independently set using the Control Software , while the two divided signals can be monitored on the DIVIDER MON output ( C10 ). When the loop is activated, the PHASE mon output ( C11 ) provides a real-time replica of the phase-error signal after the PI stage.</p> <p>Since each laser can only be locked to a reference at a time, in this case another laser wavelength, the PLL Module can not be used with other Locking Modules ( LIA , PDH ) on the same QubeCL system.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#71-connectors","title":"7.1 Connectors","text":"<p>Figure 16: Appearance of the PLL module</p> Table 8: PLL Module Connector Properties Connector Type Attributes C8. RF in Input Signal level: -30 dBm 0 dBm &amp; Bandwidth: 10 MHz 300 MHz C9. LO in Input C10. mon Output Requires 50\u03a950\\Omega50\u03a9 AC Coupled C11. Phase mon Output Requires High-Z load DC Coupled Range: -1 V / 1V"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#72-control-software-interface","title":"7.2 Control Software Interface","text":"<p>The QubeCL Control Software has a dedicated section for the control and monitor of the PLL Module, it can be accessed by clicking on the PLL tab in the lower portion of the GUI.</p> <p>Figure 17: Control Software Interface dedicated to the PLL Module</p> <p>As can be seen in , the panel dedicated to the PLL module is divided into two main areas: on the rightmost part there are two panels named Phase Error Plot and Transfer Function which in turn show the actual error signal monitored by the PLL module and the transfer function implemented by the PI loop mounted on the module itself with the current parameters. The remaining part of the panel is dedicated to all the controls available for the user to control the behavior of the PLL Module.</p> <p>The controls for the PLL module are subdivided into categories based on their functionality. The Phase Detector Settings panel gives the user access to the controls for the Phase Detector:</p> <ul> <li> <p>CPG: sets the output gain for the Phase Detector, has a range between 1 and 8. It has a proportional e\ufb00ect on the transfer function of the module.</p> </li> <li> <p>GPG mult: works as a multiplier for the CPG control, the total proportional gain introduced is the product of the two.</p> </li> <li> <p>LO Divider: sets the frequency division factor (integer) for the Local Oscillator signal.</p> </li> <li> <p>RF Divider: sets the frequency division factor (integer) for the RF input signal (e.g. the beatnote).</p> </li> <li> <p>Sign: sets the sign of the PI correction loop.</p> </li> </ul> <p>The Divider Monitor panel gives the user the ability to chose what signal will be sourced to the Division Monitor Output connector (C10). When in OFF position, no signal will be available. The other two buttons allow to chose between the post-divisor Local Oscillator signal or the post-divisor RF signal, so that the user can visualize the actual frequency of the two signal once they\u2019ve been divided.</p> <p>The Lock panel allows the user to chose the functional mode of the correction PI loop of the PLL module. There are three possible options:</p> <ul> <li> <p>OFF: the PI loop is not working and does not add any correction signal to the laser current.</p> </li> <li> <p>P: the loop works in Proportional mode, only the proportional gains a\ufb00ect the output correction signal.</p> </li> <li> <p>PI: the loop work with both Proportional and Integrative components, being fully en- abled.</p> </li> </ul> <p>On the central bottom part of the tab, the Phase PI settings allow the user to control the PI loop gains:</p> <ul> <li>Phase Prop: sets the Proportional Gain of the PI loop.</li> <li>Phase Int: sets both the Integrative Gain of the PI loop and the high frequency cut-o\ufb00.</li> </ul> <p>The Transfer Function plot gets automatically updated each time that any of the previously mentioned control is changed, with the exception of the Division Monitor which does not a\ufb00ect the transfer function of the PI loop. For a correct visualization of the loop, the user must input the laser Frequency tuning into the dedicated form on the plot panel.</p> <p>The Phase Error Plot shows the real time value of the phase error. The sampling rate is low, hence it will not be helpful with fast moving signals, but can give the user and easy way to monitor the time evolution of this signal during the locking.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#73-pll-operation","title":"7.3 PLL Operation","text":"<p>For a proper set-up and use of the PLL module, please follow the steps listed below:</p> <ul> <li> <p>Check that the Beatnote ( RF ) signal has a level between -30 dBm and 0 dBm and a frequency between 0 and 300 MHz. This signal must be connected to the RF IN ( C8 ) conenctor.</p> </li> <li> <p>Use a function generator to generate a Local Oscillator signal with a level close to 0 dBm and a frequency between 10 MHz and 100 MHz. This signal must be connected to the LO IN ( C9 ) connector.</p> </li> <li> <p>Set both LO divider and RF divider to 1.</p> </li> <li> <p>Connect the DIVIDER MON output connector ( C10 ) to an oscilloscope with a 50 \u2126 termination. By using the Div Mon control, switch the signals that have to be sourced on this port. The output signal must be a clean square wave with the same frequency of the selected input signal (RF or LO). If the output frequency is not properly counted, a better \ufb01ltering is required for the input signal, in order to obtain an higher SN ratio for the counter to properly work.</p> </li> <li>Set the values of LO divider and RF divider so that the two subdivided frequencies are as close as possible.  </li> <li> <p>For example: if f=100MHzf = 100 MHzf=100MHz and f=10MHzf = 10 MHzf=10MHz, set LOdiv=1LO div = 1LOdiv=1 and RFdiv=10RF div = 10RFdiv=10.</p> </li> <li> <p>Write the proper value for the laser Tuning Coe\ufb03cient in the Laser Tuning input form in the Transfer Function Plot tab. Then set the values for CPG, CPG mult, Phase Prop and Phase Int aiming to obtain a Transfer Function Plot that properly crosses the Unity Gain level to obtain stability.</p> </li> <li> <p>Check the Phase Error Plot to see if the Phase Detector is properly working: \ufb01nely tune the bias current from the Current Control Panel in order to force a change in the beatnote frequency. Make the RF signal frequency cross the LO one to see if the Phase Error switches from positive to negative or vice versa.</p> </li> <li> <p>Tune the Bias Current in order to approach the desired frequency for the lock and enable the Proportional Lock loop ( P button). If the RF signal frequency sweeps away from the LO one, change the Loop Sign, otherwise the PLL is already working to lock the signal.</p> </li> <li> <p>Enable the PI button of the Lock panel.</p> </li> <li> <p>Adjust the CPG, Phase Prop and Phase Int settings in order to optimize the lock quality. More than one locking condition can be found, with di\ufb00erent bandwidths and gains.</p> </li> </ul> <p>Once the lock has been successfully achieved, the Slow Loop functionality can be activated in order to compensate phase errors arising because of slow drifting environmental parameters. To do so, please check .</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#8-advanced-operations-pdh-module","title":"8 Advanced Operations - PDH module","text":"<p>The PDH module gives to the QubeCL instrument the capability of easily perform a com- plex task such as the lock of the controlled laser frequency to an optical cavity. The PDH module requires two input signals: the radio-frequency (SIGNAL IN) signal generated by the frequency-modulated laser beam re\ufb02ected back from the cavity and the Local Oscillator (REF IN) signal used for demodulating RF signal. The LO is usually generated by the same function generator used for the frequency modulation, after a careful tuning of the relative phase. When the PDH is activated, a current proportional to the error signal is processed by a Proportional-Integrative ( PI ) stage and internally added to the bias current closing the frequency-stabilization loop.</p> <p>Since each laser can only be locked to a reference at a time, in this case an optical cavity, the PDH Module can not be used with other Locking Modules ( LIA , PLL ) on the same QubeCL system.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#81-connectors","title":"8.1 Connectors","text":"<p>Figure 18: Appearance of the PDH module</p> Table 9: PDH Module Connector Properties Connector Type Attributes C12. Signal IN Input Signal level: -30 dBm 20 dBm &amp; Bandwidth: 300 kHz 100 MHz C13. REF IN Input Signal level: 7 dBm &amp; Bandwidth: 300 kHz 100 MHz C14. MON OUT Output Requires High-Z \u03a9\\Omega\u03a9 load DC Coupled Input Range: -1 V / 1V C15. HOLD Signal level: TTL Bandwidth: 10 MHz"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#82-control-software-interface","title":"8.2 Control Software Interface","text":"<p>Figure 19: Control Software Interface dedicated to the PDH Module</p> <p>The QubeCL Control Software has a dedicated interface for the control of the PDH module, which can be accessed by clicking on the PDH tab in the lower half of the GUI. As it can be seen in , the PDH control tab is subdivided into two main parts, as well as the PLL tab is. On the right side, two monitor plots can be selected in the respective tabs, so that the user can have a look on the transfer function of the PI loop of the module or at the level of the correction signal produced by the PI loop itself. On the left side, the tab includes all the necessary controls to properly use the PDH Module. </p> <p>On the top right corner of the PDH tab, there is the PDH Lock set of controls, which allows the user to perform various actions:</p> <ul> <li> <p>The \ufb01rst couple of buttons, P and PI, allow the user to chose the mode of the correc- tion loop of the PDH module, switching between pure Proportional and Proportional- Integrative.</p> </li> <li> <p>The LOCK button allows the user to activate the correction loop by injecting the correcting current on the laser.</p> </li> <li> <p>The Hold button enables the HOLD input ( C15 connector).</p> </li> </ul> <p>When the Hold Enable button is active, the automatic correction loop of the PDH module can be put into an Hold State in which is it closed on its set-point, so that its output remains constant at the level it was when the Hold signal is asserted. To externally control the Hold function, a TTL signal must be connected to the C15 connector. A 5 V level would activate the correction loop while a 0 V level leaves it in an Hold state.</p> <p>Next to the PDH Lock panel, the Save button allows the user to store the current settings for the PDH module into the ROM memory of the QubeCL, so that they will be used as default the next time the driver is switched on.</p> <p>The PDH Mon panel contain a switch button that allows the user to chose which signal will be present on the Monitor Out ( C14 connector). The available options are ER which will show the Error signal received by the module from the PDH detector, and LM which will show the correction signal generated by the correction loop on board of the PDH module.</p> <p>Below the PDG Mon, there is a panel containing all the controls for the regulation of the Input O\ufb00set for the Correction Loop of the PDH Module. The desired o\ufb00set can be directly typed into the dedicated form, otherwise the four up and down arrows can be used. Each arrow will add or remove an o\ufb00set value correspondent to the value written in the form below the couples of arrows.</p> <p>The PDH PID settings panel allows the user to tune the parameters of the PI Correction Loop.</p> <ul> <li> <p>PRE AMP allows the user to set the gain of the pre-ampli\ufb01er of the loop. It accepts value between 2 an 11. This value is a pure gain, hence it has no unit of measurement.</p> </li> <li> <p>PDH P1 allows the user to set the overall proportional gain of the loop.</p> </li> <li> <p>PDH P2 allows the user to set the proportional gain of the loop, but also in\ufb02uences the position of the integratife cut-o\ufb00 frequency when the loop is in PI mode.</p> </li> <li> <p>PDH I allows the user to set the cut o\ufb00 frequency of the integrative action of the correction loop.</p> </li> </ul> <p>The Slow Loop control panel is identical to the one that is present in the PLL tab, users can refer to the dedicated .</p> <p>The Transfer Function Plot gives a visual representation of the transfer function of the correction loop. The plot automatically updates each time the user change one of the param- eters for the loop itself. For a correct visualization of the plot, it is necessary to \ufb01ll the Laser Tuning form with the actual parameter of the laser being driven by the QubeCL.</p> <p>The PDH Lock Mon Plot shows the temporal evolution of the correction signal generated by the PI loop of the PDH module. The digital monitor used to update this plot has a low sampling frequency, hence it can\u2019t be used to monitor high frequency signals on screen, but it gives a long history of the locking signal evolution during time.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#83-pdh-operations","title":"8.3 PDH operations","text":"<p>For a proper set-up and operation of the PDH module, follow the steps listed below:</p> <ul> <li> <p>Verify that the signal re\ufb02ected from the cavity has a level between -40 dBm and 20 dBm, with a frequency between 300 kHz and 100 MHz. Connect this signal to the SIGNAL in ( C12 ) connector.</p> </li> <li> <p>Use a function generator to generate a proper demodulation signal, with 7 dBm magni- tude and a frequency between 300 kHz and 100 MHz. Connect this signal to the REF in ( C13 ) connector.</p> </li> <li> <p>Activate the modulation signal to the laser, monitoring the ER signal youll be able to \ufb01nd the characteristic PDH signal waveform. Adjust the modulation signal phase until you \ufb01nd the value that minimizes the carrier contribution to the signal, leaving only the sidebands contributions. At that point, the right phase to obtain a good lock is that value +/\u2212+/-+/\u2212 90\u00b0. Try one of those two values and LOCK the loop in P mode, if only the sidebands contributions are magni\ufb01ed try the other phase value, otherwise this is the right one.</p> </li> <li> <p>While locked and in P mode, change the P1 and P2 values until you \ufb01nd the combination that produces the best e\ufb00ects on the signal transmitted by the cavity. Reduce the amplitude of the ramp signal used to scan the lasers frequency searching for the one that matches the cavity while adjusting its o\ufb00set to keep the lasers frequency close to the resonance.</p> </li> <li> <p>Activate the PI mode and search for the best PI parameters combination, which guar- antees the best locking performance.</p> </li> </ul> <p>Once the lock has been successfully achieved, the Slow Loop functionality can be activated in order to compensate phase errors arising because of slow drifting environmental parameters. To do so, please check .</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#9-advanced-operations-lia-module","title":"9 Advanced Operations - LIA module","text":"<p>The LIA ( Lock-In Ampli\ufb01er ) module gives the QubeCL the ability to perform lock of the controlled laser frequency to the \ufb01rst or second derivative of a molecular absorption line pro\ufb01le.</p> <p>The LIA requires two signals to operate: one demodulating signal and the signal from the detector used to retrieve the absorption signal from the reference molecular sample. The de- modulating signal must be synchronous with the modulating one. To obtain such synchronous signals, the LIA module must work in pair with the DDS sub-module, the latter being in charge of generating both the modulating and demodulating signals. The modulation-demodulation action performed by a QubeCL equipped with a LIA module allows the instrument to obtain a signal proportional to the \ufb01rst or second derivative of the absorption line signal retrieved by the detector. This signal can be used as an error signal to be processed by an internal Proportional-Integral (PI) Correction Loop . Doing so, LIA module can generate a correction current which is directly fed to the laser, closing the frequency-locking loop over the reference absorption line.</p> <p>Since each laser can only be locked to a reference at a time, in this case a molecular absorption line, the LIA Module can not be used with other Locking Modules ( PLL , PDH ) on the same QubeCL system.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#91-connectors","title":"9.1 Connectors","text":"<p>Figure 20: Appearance of the LIA module</p> Table 10: LIA Module Connector Properties Connector Type Attributes C16. Signal Out Output Requires Hi-Z load DC Coupled Signal Level:  -1 V 1 V C17. SIgnal In Input AC Coupled Signal Level: &lt; 1 Vpp. C18. Sine Out Output Requires Hi-Z load DC Coupled Signal level: -1 V 1 V C19. Ramp Out Output Requires Hi-Z load DC Coupled Signal level: -1 V 1 V"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#92-the-dds-sub-module-operation-in-pair-with-the-lia-module","title":"9.2 The DDS sub-module operation in pair with the LIA module","text":"<p>The operation of the LIA modules require the modulating and demodulating signals to be synchronized one to the other. To achieve perfect synchronization, the use of a single timing</p> <p>source is required. The DDS sub-module provides such timing source, generating both the modulating signal with the DDS1 and the demodulating signal which is internally fed to the LIA module</p> <p>The demodulating signal frequency is \ufb01xed at 32.768 kHz, hence the modulating signal frequency is forced to operate in two possible states:</p> <ul> <li> <p>To retrieve the \ufb01rst derivative of the molecular absorption line, the modulating signal must have the same frequency as the demodulating one, hence the DDS1 frequency is \ufb01xed at 32.768 kHz.</p> </li> <li> <p>To retrieve the second derivative of the molecular absorption line, the modulating signal must have half the frequency of the demodulating signal, being 16.384 kHz.</p> </li> </ul> <p>In both cases, the DDS1 frequency cannot be changed by the available control in the DDS panel, which becomes inactive.</p> <p>The reciprocal phase between the modulating and demodulating signal is another crucial factor to achieve a good lock with the LIA module. Because of that, if the LIA module is set to be active at the startup of the instrument, it performs a rephasing process in order to obtain a known initial status of the phase between the two signals. The process runs for a few seconds until the phase between the two is equal to the DDS1 phase saved in the ROM memory of the QubeCL. The LIA module is ready to be used once the rephasing process is done.</p> <p>If the LIA module is not necessary and the user wants to have full control on the DDS1 frequency, the LIA demodulating mode can be set to OFF (see the below chapter), to remove the frequency constraints for DDS1. The rephasing process too is not performed at startup if the LIA demodulating mode is set to OFF.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#93-control-software-interface","title":"9.3 Control Software Interface","text":"<p>Figure 21: Control Software Interface dedicated to the LIA Module</p> <p>The QubeCL Control Software section dedicated to the LIA module can be accessed by clicking on the LIA tab in the lower part of the GUI. Similarly to the PLL and PDH modules, also this control tab is subdivided into a monitor section and a control section.</p> <p>On the center portion of the LIA tab, the user can \ufb01nd the commands that control the functionality of the correction loop included into the LIA module:</p> <ul> <li> <p>The Loop mode switch allows the user to chose if the Control Loop should work in pure proportional mode or in proportional-integrative mode.</p> </li> <li> <p>The Filter enable button enables or disables a tunable Low-Pass \ufb01lter that may be useful to smooth out the Correction Signal generated by the Loop.</p> </li> <li> <p>The LOCK buttons enable or disables the correction signal fed to the laser, e\ufb00ectively closing the correction loop.</p> </li> </ul> <p>Next to this section, user can \ufb01nd the Save button. By pressing it, the user will save all the current LIA parameters an functional modes into the ROM memory of the QubeCL so that they\u2019ll be used as default the next time the QubeCL is switched on.</p> <p>The ON button to the left of the save button allows the user to switch o\ufb00 the LIA operations, deactivating the demodulator.</p> <p>The Phase Ready LED indicates if the rephasing process between the DDS and the de- modulating signal is completed.</p> <p>The LIA Loop Settings box holds all the controls to tune the PI Correction Loop gains:</p> <ul> <li> <p>VGA GAIN set the Gain of the Variable Gain Ampli\ufb01er (VGA) being the \ufb01rst stage of the Correction Loop. The gain is expressed in dB. The value of the Gain can be changed both by direct typing or with the up and down arrows. Accepted values range from 0 dB to 80 dB.</p> </li> <li> <p>Prop. sets the magnitude of the Proportional action of the Correction Loop . This control also a\ufb00ects the cut-o\ufb00 frequency of the Integrative component of the Correction Loop .</p> </li> <li> <p>Integ. sets the cut-o\ufb00 frequency of the Integrative component of the Correction Loop .</p> </li> <li> <p>Filter sets the -3 dB frequency for the Low Pass Filter that can be activated with the Filter Enable button.</p> </li> </ul> <p>The leftmost section of the LIA tab holds all the control speci\ufb01c for the Lock-In Ampli\ufb01er and the monitor selector:</p> <ul> <li> <p>The Monitor Selector switch allows the user to decide which signal is present on the SIGNAL OUT ( C16 ) port of the LIA module. By selecting LOCK, the LIA module will output the correction signal generated by the internal PI control loop. The ERR selection sets the error signal (which is the input to the PI control loop) to be on the SIGNAL OUT connector.</p> </li> <li> <p>The Digital Filter drop-down menu allows the user to select one of the available built-in digital \ufb01lters. More information about the speci\ufb01c behavior of each \ufb01lter can be found in the dedicated chapter below.</p> </li> <li> <p>The Demod. Freq. switch allows the user to select in which mode the LIA module should works. When f is selected, the LIA works to lock the laser on the \ufb01rst derivative of the absorption line, while using the 2f mode sets the LIA to work on the second derivative of the absorption line. When the OFF button is selected, the LIA is set to not work in pair with the DDS module.</p> </li> </ul>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#94-lia-operations","title":"9.4 LIA operations","text":"<p>For a proper set-up and operation of the LIA module, follow the steps listed below:</p> <ul> <li> <p>If necessary, set the desired demodulating mode and wait up to a few seconds for the rephasing process to be completed. The Phase Ready LED will light up once the process is completed.</p> </li> <li> <p>Connect the detector to an oscilloscope and use the DDS2 to scan the laser wavelength to \ufb01nd the absorption line of the reference molecule with a low frequency triangular wave modulation. To easily achieve this condition, lock the external synchronization signal of the LH module to the DDS2 and use it as the trigger for the oscilloscope acquisition.</p> </li> <li> <p>Once the absorption line has been found and it is well centered in the scope screen, activate the DDS1 and set a proper modulating amplitude. The LIA module is capable of demodulating signal down to a few tens of mV, higher signals risk to saturate the internal ampli\ufb01er stages. Check the signal from the detector to verify that the amplitude of the modulation is in this accepted range. Connect the signal from the detector to the SIGNAL IN connector of the LIA module.</p> </li> <li> <p>Connect the SIGNAL OUT connector to the oscilloscope in order to have a monitor signal to be used as a reference during the locking operation. The oscilloscope must have a high impedance input. Set the monitor selector to ERR. The \ufb01rst derivative of the absorption line must appear on the scope, as a consequence of the demodulating action performed by the LIA.</p> </li> <li> <p>Set the Digital Filter that produces the best signal quality and maximizes the amplitude of the signal on the scope.</p> </li> <li> <p>By adjusting the modulating signal phase, search for the worst condition (lowest signal on the monitor). Once achieved, change the modulating frequency phase by 90\u00b0to obtain the optimum phase condition. It may be necessary to switch between the +90\u00b0and - 90\u00b0phase conditions in order to \ufb01nd the proper correction loop sign.</p> </li> <li> <p>Set the correction loop to P mode and close the correction loop with the LOCK button. Activate and tune the Low Pass Filter if necessary.</p> </li> <li> <p>Adjust the Prop. and VGA gains to maximize the correction signal without occurring in an oscillating behavior.</p> </li> <li> <p>Set the correction loop to PI mode and adjust the Integ. time constant to achieve a good locking.</p> </li> </ul> <p>Once the lock has been successfully achieved, the Slow Loop functionality can be activated in order to compensate phase errors arising because of slow drifting environmental parameters. To do so, please check .</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#95-lia-digital-filter","title":"9.5 LIA digital \ufb01lter","text":"<p>The LIA module is equipped with a mixed signal Lock-In Ampli\ufb01er which includes a set of built-in digital \ufb01lters. The digital \ufb01lters shows a frequency behavior which is dependent on the clock frequency used to drive the \ufb01lter. In the LIA module, the clock signal used for the digital \ufb01lter is generated by the DDS sub-module with a \ufb01xed frequency of:</p> <p></p><p>fCLK=220=1.048576MHz f_{CLK} = 2^{20} = 1.048576MHz fCLK\u200b=220=1.048576MHz</p> The clock signal passes through a series of frequency divider before reaching the programmable digital \ufb01lter, thus obtaining a frequency of: <p></p><p>fSO=217=131.072kHz f_{SO} = 2^17 = 131.072kHz fSO\u200b=217=131.072kHz</p> The available \ufb01lters, which can be selected by the mean of the dedicated drop-down menu, are the following ones: <ul> <li> <p>BP0: Band Pass \ufb01lter, centered on fSOf_{SO}fSO\u200b/8 = 16.384 kHz </p> </li> <li> <p>BP1: Band Pass \ufb01lter, centered on fSOf_{SO}fSO\u200b/4 = 32.768 kHz, Q = 8.4 </p> </li> <li> <p>BP2: Band Pass \ufb01lter, centered on fSOf_{SO}fSO\u200b/4 = 32.768 kHz, Q = 4.3 </p> </li> <li> <p>LP1: Low Pass \ufb01lter, -3 dB at fSOf_{SO}fSO\u200b/5 = 26.2144 kHz, 4<sup>th</sup> order </p> </li> <li> <p>LP2: Low Pass \ufb01lter, -3 dB at fSOf_{SO}fSO\u200b/8 = 16.384 kHz, 4<sup>th</sup> order </p> </li> <li> <p>Notch: centered on fSOf_{SO}fSO\u200b/4 = 32.768 kHz, 1<sup>st</sup> order </p> </li> <li> <p>All Pass</p> </li> </ul>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#10-advanced-operations-slow-drift-compensation","title":"10 Advanced Operations (Slow drift compensation)","text":"<p>All three of the locking modules previously described are built to com- pensate fast drifts in the laser wavelength in order to lock it to a speci\ufb01c reference, depending on the locking mechanism which is being deployed. Nevertheless, a variety of environmental factors (such as temperature varia- tions, mechanical vibrations and strains, optical feedbacks, etc.) may intro- duce slow drifts in the locking point. To maintain the lock to the reference, the PI correction loop of the locking modules is forced to follow those slow drifts in order to compensate them. If the control loop output drifts towards one of its saturation levels, the lock will be lost due to the inability of the PI loop to further correct the laser wavelength against the environmental disturbance.</p> <p>To avoid this kind of slow drifting interference to break the lock, each locking module may automatically compensate those slow drifts by directly acting on the bias current fed to the laser or on the temperature setpoint of the laser being controlled by the onboard TC module. This correction loop can be activated and controlled with the dedicated Slow Loop box which is present in each one of the locking module tabs of the QubeCL_Control software.</p> <p></p> <p>The Slow Loop Control box includes the followings commands:</p> <ul> <li> <p>Slow Loop button: enables and disables the Slow Loop automatic compensation.</p> </li> <li> <p>Actuator: allows the user to decide whether the slow loop acts on the Bias Current or on the Temperature Setpoint of the laser.</p> </li> <li> <p>Sign: sets the sign of the slow loop.</p> </li> <li> <p>SL cycle time: sets the sampling rate (expressed in ms) for the slow loop to act.</p> </li> <li> <p>Iset Limit: sets the maximum variation of the bias current sourced to the laser that the slow loop can produce.</p> </li> </ul> <p>Once the lock has been successfully achieved (with whichever of the locking module is being deployed on the instrument), follow these steps to activate the slow loop:</p> <ul> <li> <p>Chose the operating mode of the Loop: Current or Temperature. Note that acting on Temperature forces the Loop to have a very long response time from the laser, with the risk of triggering an oscillating behavior.</p> </li> <li> <p>If the Slow Loop is acting on the current of the laser, set the maximum allowed correction current.</p> </li> <li> <p>Enable the automatic correction by pressing the Slow Loop button.</p> </li> <li> <p>Check the error monitor plot to see if the Slow Loop is working properly: the error must be drifting toward 0, otherwise the Sign of the Slow Loop must be reversed.</p> </li> <li> <p>Adjust the SL cycle time to make the compensation loop faster or slower, if needed.</p> </li> </ul>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#11-advanced-operations-qubecl-advanced-settings","title":"11 Advanced Operations - QubeCL advanced settings","text":"<p>The QubeCL_control Software also has 2 tabs for advanced settings. The two tabs hold a series of controls that are less frequently useful or which give a direct control over some speci\ufb01c functionalities of the QubeCL. The two advanced tabs are available in the lower half of the Control Software GUI.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#111-advanced-tab-1","title":"11.1 Advanced tab 1","text":"<p>Figure 22: The \ufb01rst Advanced tab of the Control Software GUI</p> <p>The \ufb01rst advanced tab, visible in , is subdivided in \ufb01ve di\ufb00erent panels, each one dedicated to a particular set of commands and controls.</p> <p>The Direct Communication panel regroups all the commands that can be used to directly communicate with the QubeCL by textual commands instead of the interaction with the But- tons and Forms contained in the GUI.</p> <p>The command that the user wants to send to the QubeCL must be typed into the COMMAND form, a complete list of the available commands with their syntax can be found in  Chapter 13.</p> <p>Once the command has been sent by pressing the SEND COMMAND button, the reply (if any) from the QubeCL can be read in the READBACK form.</p> <p>The CM Advanced panel regroups some information about the CM module(s) on board of the QubeCL, which are the one(s) deputed to the generation of the Current for the laser. Here, the temperature of the modules is shown in the CM Temp box, while DtLoop shows the update time of the GUI. The update can be forced by pressing the Update Panel button. The Power button allows the user to switch o\ufb00 the power supply for all the modules except the TC, which has a separate power line. Using this command to switch o\ufb00 some of the module while the QubeCL is operating is an advanced operation and may lead to unexpected behavior, do not use it when the laser is connected to the QubeCL.</p> <p>The TC Advanced panel holds advanced commands for the TC module. Similarly to the CM Advanced panel, there is a Power button that allows the user to switch on and o\ufb00 the power to the TC module. As well as for the CM module, this operation is dangerous and must be handled with care. TEC Mode** switch allows the user to decide whether the TC module should act as a Tem- perature Controller for the laser (strongly recommended option) or as an Heater.  </p> <p>TEC limit is the maximum current that the TC module can source, in both directions, to the Peltier module mounted on the laser. User can change this value by the mean of the CHANGE button, which will open a dedicated window. Set the Maximum current accord- ingly to the one stated in the datasheet or test report of the laser that needs to be driven by the QubeCL.  </p> <p>The two TSetMAX and TSetMIN values are used to set the maximum and minimum tem- perature that can be selected as setpoint for the Temperature Stabilization Loop operated by the TC module. As well as for the TEC current limit, those values can be changed using the respective CHANGE buttons. The ErrSumLim parameter is the one used as a safety measure to prevent the Temperature Controller to drift away from the setpoint or to fail to stabilize the temperature for any other reason. A detailed explanation of this parameter can be found in the Chapter 5 section on Automatic Protections.</p> <p>The System Modules panel shows the composition of the QubeCL by highlighting the LED corresponding to each module present in the QubeCL. If there are more than one module of each kind (CMs, for example), the number of modules is also plotted in the corresponding LED. The con\ufb01guration can be changed by clicking on the CONFIG button, however ppqSense strongly discourage the modi\ufb01cation of the QubeCL stack by the customers to avoid any damage and the warranty nulli\ufb01cation.</p> <p>The System Advanced panel holds some rarely used commands. The Fan Control com- mand allows the user to chose the speed of the cooling fan, ppqSense strongly recommends to leave this selector on the Auto position. The two buttons on the lower part of the panel can be used to activate the Wi-\ufb01 or the LAN connection, if the QubeCL is provided with such options. The two forms in the lower right part of the panel can be used to chose how often the data acquired from the Control Software have to be saved in the log \ufb01le. Lastly, the ProgOn button which allows to use the Control Software to update the \ufb01rmware of the QubeCL. </p> <p>ProgOn Firmware update</p> <p>This operation is dangerous and must never be executed when the QubeCL is connected to a laser. Using this command may cause incompatibility of the QubeCL with the Control Software or with some of its modules, so it has to be executed only under assistance by ppqSense sta\ufb00.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#112-advanced-tab-2","title":"11.2 Advanced tab 2","text":"<p>This tab holds fewer controls, being available for future development. The tab holds two panels dedicated to some advanced featurer both of the DDS sub-module and the LIA module.</p> <p>Figure 23: The second Advanced tab of the Control Software GUI</p> <p>The Clock &amp; Sync. panel holds a series of advanced controls for the DDS sub-module. The \ufb01rst three buttons, DDS, allow the user to switch on and o\ufb00 the timing clocks generated by the DDS board. The \ufb01rst clock is the one used to serve as a time reference for the DDS circuits. If this DDS is switched o\ufb00, the onboard DDS won\u2019t be able to source any signal. The Int. Sync buttons switches on and o\ufb00 the synchronization signal internal to the QubeCL, used by the driver to establish a shared time base between the DDS sub-module and the LIA or PDH modules. Switching o\ufb00 this signal will disrupt the synchronization between the DDS sub-module and the PDH/LIA modules, preventing any locking procedure to work as described in this manual.  </p> <p>The Ext. Sync button switches on and o\ufb00 the SYNC OUT signal available on the C7 connector of the LH module. The Ext. Sync. Phase allow the user to change the phase of the external synchronization signal available on the connector C7 of the LH module, if the DDS sub-module is included in the QubeCL stack. The Lock-In Ampli\ufb01er panel holds some advanced commands interacting with the LIA module. The MIXER button switches on and o\ufb00 the demodulating action of the LIA module. The 90\u00b0SHIFT enables or disables a 90 degrees shift on the demodulating signal of the Lock- In Ampli\ufb01er. The Clock Div. selector enables the user to set a division factor for the demodulating signal of the LIA module, ultimately reducing the actual frequency of the demodulating signal. By changing the value of each one of those controls from the standard ones will a\ufb00ect the ability of the QubeCL to perform locking with the LIA modules.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#12-interfacing-with-lasers","title":"12 Interfacing with lasers","text":"<p>The basic version of the QubeCL has two modules that provides the connections to the laser: the Laser Head (LH) Module, with an SMA connector to source current to the laser, and the Temperature Controller (TC) Module, with a multipolar connector, used to sense and stabilize the temperature of the laser. The vast majority of laser do not have an electrical connection that directly matches the output connectors of the QubeCL, hence ppqSense has developed a variety of interconnection boards and housing modules in order to make it easier for the user to connect the laser to its driver without self-assembled solutions.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#121-laser-housing-for-qubecl","title":"12.1 Laser Housing for QubeCL","text":"<p>To make the set-up even smaller, reducing space consumption, complexity and electrical noise susceptibility, it is possible to include a laser Housing Module on top of a QubeCL. Such Module provides the mechanical anchorage for the laser, acts as an heatsink and provides all the necessary electrical interconnection with the other modules composing the QubeCL device. When a laser Housing Module is present, the LH and TC modules do not have the external connection to the laser, which are no more necessary, being the laser connected to them inside the QubeCL itself.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#1211-butterfly-packaged-laser-housing","title":"12.1.1 Butter\ufb02y Packaged laser Housing","text":"<p>ppqSense provides various di\ufb00erent typologies of laser Housing Modules for butter\ufb02y-packaged lasers, in order to guarantee compatibility with a variety of di\ufb00erent pins layout and package dimensions. Modules are available both with optical-\ufb01ber output or with mounting holes to screw a periscope on the side of the QubeCL. Please, contact ppqSense to verify the compatibility of our Butter\ufb02y Housing with the model you want to buy or to discuss the realization of a dedicated solution.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#1212-hhl-packaged-laser-housing","title":"12.1.2 HHL Packaged laser Housing","text":"<p>A variety of di\ufb00erent HHL housing modules are available to be mounted on a QubeCL, developed to ensure compatibility with di\ufb00erent manufacturer standards. The modules come with the necessary holes to mount periscopes and collimating lenses, if needed. Please, contact ppqSense to verify the compatibility of our HHL Housing with your laser model, its power ratings and the heat dissipation requirements.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#122-laser-interface-boards","title":"12.2 Laser Interface Boards","text":"<p>The Interface Boards developed by ppqSense are useful to interface a laser with its QubeCL driver without including the laser in the driver itself. Interface Boards have two electrical connections that matches the outputs of the QubeCL driver, while also presenting a connector dedicated to match the pins of the laser. The Interface Boards do not provide any mechanical anchorage for the laser and are only intended for its electrical connection with the QubeCL driver.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#1221-hhl-interface-board","title":"12.2.1 HHL Interface Board","text":"<p>The HHL interface boards is speci\ufb01cally designed to provide electrical interconnection with the QubeCL driver in a very small board (55 x 35 mm), while also providing some safety features for the laser. Please, contact ppqSense sta\ufb00 to verify the compatibility of the HHL Interface Board with your speci\ufb01c laser.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#1222-nanoplus-cubic-housing-interface-board","title":"12.2.2 NanoPlus Cubic Housing Interface Board","text":"<p>In order to connect the QubeCL with lasers embedded in the Cubic Mount from NanoPlus, we\u2019ve developed an interface board which can be directly screwed to the DB9 connectors of the Cubic Mount, providing all the external connection to directly attach to the QubeCL driver.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#123-high-frequency-modulation-with-bias-tee","title":"12.3 High Frequency modulation with Bias-Tee","text":"<p>Some of the Interface Boards and Housing Modules may include an high-frequency modu- lation input to source the laser with modulating signals at higher frequency with respect to the ones allowed by the QubeCL modulators (see Chapter 6, , , and the QubeCL datasheet).  </p> <p>To allow such high-frequency modulation, the Interface Boards and Housing Modules use a Bias-Tee.</p> <p>Figure 24: Bias Tee simpli\ufb01ed electronic diagram</p> <p>Bias-Tee is an electronic component used to inject high-frequency modulating signal over a DC bias signal. The component has three ports of which one is used to source a DC bias signal while the other injects the radio frequency signal, the third port is the output one, where the bias and the RF signal are superimposed. The Bias-Tee works to decouple the sources of the two input signals.</p> <p>As it is shown in , Bias Tee can be described as a LC circuit working as a \ufb01lter to decouple DC bias and RF signals on their respective ports. Because of its circuit model, Bias Tees can only couple RF signal over a certain cut-o\ufb00 frequency. The Bias-Tee used inside ppqSense devices has a 500 kHz cut-o\ufb00 frequency, hence it can\u2019t be used to inject modulation signal below such frequency.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#1231-bias-tee-usage-for-high-freuqency-laser-modulation","title":"12.3.1 Bias-Tee usage for high freuqency laser modulation","text":"<p>QubeCLs drivers are able to source modulating signals to the laser by themselves with a - 3 dB bandwidth of 2 MHz, without needing any external circuitry. The great advantage of the modulating signals of the QubeCL is that they are generated as current signals by dedicated current-drivers. The fact that the QubeCLs houses current drivers for modulating signal generation makes the process of generating a modulating signal for the laser an easy and straightforward operation, since the amplitude and frequency of the signal can be easily de\ufb01ned by the input signal to the QubeCL or with the DDS interface on the GUI. Bias-Tee steps in if higher frequencies modulating signals are necessary.</p> <p>All the Housing Modules and Interface Boards equipped with a Bias-Tee have a high- frequency modulation input to which the user has to connect the modulating signal. Bias-Tee has the advantage of withstanding higher frequencies, but the disadvantage of being designed to couple voltage-signal and not current-signal as the one that should be used to properly and easily drive a laser. Given that, when sourcing a signal to the RF port of the Bias-Tee boards, care must be taken in order to properly understand how the voltage applied to the port is converted into current on the laser.</p> <p>In those condition, the amplitude of the modulating current not only depends on the ampli- tude of the modulating signal but also on the operating point of the laser itself (which is set by the DC bias current) and on the dynamic resistance that the laser shows at such operating point. It is possible to calculate the amplitude of the modulating current using a circuit model for the Bias-Tee analogous to the one pictured in .</p> <p>The circuit model for the Bias Tee includes a capacitor to isolate the RF port from the DC bias sourced on the DC port, while the inductance on the DC port isolates it from the RF signal sourced on the RF input. The aim is to determine the amplitude of the Modulating current-signal that is sourced out of the Bias-Tee RF+DC port knowing the amplitude of the voltage-signal applied to the RF port of the device.</p> <p>For the purpose of calculating the RF signal amplitude, the inductance on the DC port can be considered as an open circuit and hence ignored. We obtain an R-C series circuit, in which C is the capacitance of the RF port of the Bias-Tee and R is the Dynamic Resistance of the laser at the speci\ufb01c working condition, which depends on the DC bias current.</p> <p>Concerning the Capacitor C, the current that \ufb02ows through it can be calculated as:</p> <p>i=Cdvdt i = C\\frac{dv}{dt} i=Cdtdv\u200b</p> <p>For a Square Wave signal, this formula can be used to \ufb01nd out IM, which is the maximum current that can be injected through the capacitor, by using the subsequent values:</p> <ul> <li> <p>C is the capacitor of the Bias-Tee circuit, in case of the ppqSese Housing Modules and Interface Boards we have C=1\u03bcF C = 1 \u03bcF C=1\u03bcF;</p> </li> <li> <p>The derivative of the voltage signal can be approximated with the voltage peak-to- peak amplitude of the signal divided by its rise (or fall) time.</p> </li> </ul> <p>This calculation returns IM, the peak injected current for a laser Dynamic Resistance of 0\u03a90\\Omega0\u03a9 . If the Dynamic Resistance is higher, it will reduce the amplitude of the modulating current. If the Dynamic Resistance is much higher than the impedance of the Capacitor it is dominant and can limit the amplitude of the modulating current to a maximum value of:</p> <p>imod=VppR  i_{mod}= \\frac{V_{pp}}{R} imod\u200b=RVpp\u200b\u200b</p> <p>Where VppV_{pp}Vpp\u200b is the peak-to-peak amplitude of the modulating signal and R is the Dynamic Resistance of the laser.</p> <p>The two conditions described above are the extreme ones:</p> <ul> <li> <p>In one case the Dynamic Resistance R of the laser is extremely low and the amplitude of the modulating signal is only determined by the value of the Capacitor of the Bias-Tee and by the characteristics of the modulating signal.</p> </li> <li> <p>In the second case, the Dynamic Resistance R is higher and predominates over the impedance of the Capacitor at a level that the impedance can be ignored, ultimately limiting the peak-to-peak value of the resulting modulating current.</p> </li> </ul> <p>Depending on the value of the resistance, the system can show one of these two limit behaviours or something in the middle between the two limit cases if none of the impedances dominates over the other one.</p> <p>For a practical approach to the use of the Bias-Tee, once the parameters of the modulating signal are set (peak-to-peak amplitude and rise/fall time), the current IMI_{M}IM\u200b can be calculated in order to \ufb01nd out its magnitude. The modulating signal parameters can be consequently modi\ufb01ed in order to lower the amplitude of IMI_{M}IM\u200b if it comes out to be too high. I is the overall maximum amplitude of the current that the bias tee can inject into the laser in any condition, since its limited by the Bias-Tee characteristics themselves.</p> <p>Be Careful</p> <p>The fact that this is the maximum current that can be injected by the Bias-Tee does not mean that the laser can withstand it. This value is the limit for the Bias-Tee but may be higher than the maximum value allowed for the laser.  </p> <p>If possible, it could be helpful to obtain an estimate of the dynamic resistance of the laser, in order to have a better model for the circuit and not have to rely solely on the maximum current value obtained with the previous calculations.</p> <p>In any condition, starting with a low amplitude modulating signal, lower than 100 mVpp, can be helpful to avoid the risk of damaging the laser. From this starting point, the amplitude can be gradually increased trying to \ufb01nd the best amplitude for the modulating signal, always being careful not to obtain a too high modulating current.  </p> <p>A series resistor can be added between the signal generator and the Bias-Tee RF input in order to clip the amplitude of the modulating signal, obtaining the same e\ufb00ect that would be obtained with a high-resistance laser that has been described above.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#1232-interface-boards-wiring","title":"12.3.2 Interface Boards Wiring","text":"<p>All the ppqSense Interface Boards present the three port con\ufb01guration of the Bias-Tee, if the Bias-Tee option is included, being the DC Bias Current input, the RF Modulation Input and the RF + DC Output which is embedded into the laser connector. Moreover, since the Boards acts as a complete interface to the laser, they also have a TEC connector to allow Temperature Stabilization.  </p> <p>In  and  the position of the described connection into the two interface board is displayed.</p> <p>Figure 25: Drawings of the NanoPlus Cubic Mount Interface Board</p> <p>Figure 26: Drawings of the HHL Interface Board</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#13-direct-communication","title":"13 Direct Communication","text":"<p>It is possible to communicate with the QubeCL without the QubeCL Control Software. This option can be useful if the user wants to integrate the QubeCL into a complex system which is managed by a control software. The integration can be done by allowing the third party control software to directly communicate with the Serial Port of the QubeCL using the appropriate commands. Here we provide all the technical information to establish the Serial connection and a list of the available commands, along with their syntax and reply from the QubeCL.</p> <p>CAUTION</p> <p>The QubeCL Control Software provided by ppqSense provides some safety features that are useful to prevent any usage of the QubeCL that may harm both the driver or the laser connected to it. While using a third party control software, the user must be particularly cautious in order to avoid any possibly harmful condition for the QubeCL driver or the laser. Before using any third party control software, ppqSense strongly encourages the user to contact the ppqSense technical support to obaint counseling and advices from the techincal sta\ufb00.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#131-qubecl-serial-port-specifications","title":"13.1 QubeCL Serial Port Speci\ufb01cations","text":"<p>The QubeCL Control Software communicates with the QubeCL by the mean of a Serial Connection that can also be used by a third party software to interact with the driver. The baud rate of the QubeCL Serial Port is 115200 bps, which has to be set on the third party software in order for it to work with the driver. The connection is possible only if the QubeCL Control Program from ppqSense is not running, otherwise the Serial Port resources is kept occupied and it is not accessible from the third party software.</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#132-qubecl-serial-commands","title":"13.2 QubeCL Serial Commands","text":"<p>User can \ufb01nd all the available commands listed in the subsequent tables. Those commands are the ones that are available for the \ufb01nal user to be integrated in a third party control software or to be used in the QubeCL Control Software to directly communicate with the driver via the dedicated form in the Advanced tab. In order for the commands to work, they must be sent at the appropriate Baud Rate and each command must be terminated with the \\n character. The strings that the QubeCL sends back as a reply, if any for the speci\ufb01c command sent, are terminated with the \\r\\n characters.</p> <p>Output Current and Modulations</p> Table 11: Available commands for QubeCL current generator Cmd Value R/W Action Output Format Unit id: ? R Returns the identi\ufb01cative code of the instrument QubeCL- #### N.A. ilas: ? R Returns the Output Current value readed from the QubeCL monitor. ####.## mA iset: ? R Returns the Current setpoint. ####.## mA ####.## W Sets the Current setpoint. N.A. mA iout: on W Switches the Current ON. N.A. N.A. o\ufb00 W Switches the Current OFF. If the modulations were active, they\u2019re also switched OFF. N.A. N.A. imax: ? R Returns the Output Current Maxi- mum Limit set by the user. ####.## mA ####.## W Sets the Output Current Maximum Limit. ####.## mA vlas: ? R Returns the measured Voltage Drop across the laser ####.## V mod: on W Enables  Switch.  active 10 seconds after. the iout:on command. the overall Modulation This command becomes the use of N.A. N.A. o\ufb00 W Disables the overall Modulation Switch. If some of the modulations are active, they are switched o\ufb00 too. N.A. N.A. mod1: on W Enables the Modulation Channel 1. N.A. N.A. o\ufb00 W Disables the Modulation Channel 1. N.A. N.A. mod2: on W Enables the Modulation Channel 2. N.A. N.A. o\ufb00 W Disables the Modulation Channel 2. N.A. N.A. <p>Laser Temperature Controller</p> Table 12: Available commands for QubeCL temperature controller Cmd Value R/W Action Output Format Unit tlas ? R Return the Temperature of the laser measured by the TC Module. ####.## \u00b0C tstab: on W Switches the Temperature Stabiliza- tion on. N.A. N.A. o\ufb00 W Switches the Temperature Stabiliza- tion o\ufb00. N.A. N.A. tset: ? R Return the laser Temperature Set- point ####.## \u00b0C ####.## W Sets the laser Temperature Setpoint N.A. \u00b0C kp: ####.## W Sets the Proportional Gain Coe\ufb03cient for the digital PID that manages the laser Temperature Stabilization. N.A. A/K ki: ####.## W Sets the Integral Gain Coe\ufb03cient for the digital PID that manages the laser Temperature Stabilization. N.A. A/Ks kd: ####.## W Sets the Derivative Gain Coe\ufb03cient for the digital PID that manages the laser Temperature Stabilization. N.A. As/K pid: ? R Returns the Gain Values of the Digital PID that manages the laser Temper- ature Stabilization.  kp  ki  kd ####.##: ####.##: ####.## A/K A/Ks As/K tecsign: ? R Returns the sign of the PID that man- ages the laser Temperature Stabiliza- tion. 0: reverse, 1: direct. # bool dir, rev W Sets the sign of the digital PID that manages the laser Temperature Sta- bilization. N.A. N.A. tlimax: ? R Returns the Maximum Temperature Setpoint for the Stabilization PID. ####.## \u00b0C ####.## W Sets the Maximum Temperature Set- point for the Stabilization PID. N.A. \u00b0C tlimin: ? R Returns the Minimum Temperature Setpoint for the Stabilization PID. ####.## \u00b0C ####.## W Sets the Minimum Temperature Set- point for the Stabilization PID. N.A. \u00b0C teclim: ? R Returns the Maximum Current Out- put for the TC Module. ####.## A --- --- --- --- --- --- ####.## W Sets the Maximum Current Output for the TC Module. N.A. A teslim: ? R Returns the threshold for the Active Temperature Error Control. ####.## \u00b0C*s #### W Sets the threshold for the Active Tem- perature Error Control. N.A. \u00b0C*s <p>DDS Module</p> Table 13: Available commands for the DDS submodule Cmd Value R/W Action Output Format Unit dds1: ? R Returns the status of the DDS on modulation channel 1.  1: DDS is active.  0: DDS is inactive. # Bool. on W Activates the DDS on channel 1. N.A. N.A. o\ufb00 W Switches o\ufb00 the DDS on channel 1. N.A. N.A. dds1w: ? R Returns the waveform set for DDS on channel 1.  1: Sine wave.  2: Triangular wave. # Int. # W Sets the waveform for the DDS on channel 1. Accepted values are:  1: Sine wave.  2: Triangular wave. N.A. Int. dds1f: ? R Returns the frequency of the DDS on channel 1. ####.## Hz ####.## W Sets the frequency for the DDS on channel 1. N.A. Hz dds1a: ? R Returns the amplitude of the DDS on channel 1. ####.## mA ####.## W Sets the amplitude for the DDS on channel 1. N.A. mA dds1p: ? R Returns the phase of the DDS on channel 1. ####.## Deg. ####.## W Sets the phase for the DDS on chan- nel 1. N.A. Deg. dds2: ? R Returns the status of the DDS on modulation channel 2.  1: DDS is active.  0: DDS is inactive. # Bool. on W Activates the DDS on channel 2. N.A. N.A. o\ufb00 W Switches o\ufb00 the DDS on channel 2. N.A. N.A. dds2w: ? R Returns the waveform set for DDS on channel 2.  1: Sine wave.  2: Triangular wave. # Int. # W Sets the waveform for the DDS on channel 2. Accepted values are:  1: Sine wave.  2: Triangular wave. N.A. Int. dds2f: ? R Returns the frequency of the DDS on channel 2. ####.## Hz ####.## W Sets the frequency for the DDS on channel 2. N.A. Hz dds2a: ? R Returns the amplitude of the DDS on channel 2. ####.## mA ####.## W Sets the amplitude for the DDS on channel 2. N.A. mA dds2p: ? R Returns the phase of the DDS on channel 2. ####.## Deg. ####.## W Sets the phase for the DDS on chan- nel 2. N.A. Deg. syncf: ? R Returns the frequency of the DDS channel to which the Sync. Out sig- nal is synchronized. ####.## Hz ch1 W Synchronizes the Sync. Out signal to the DDS1 N.A. N.A. ch2 W Synchronizes the Sync. Out signal to the DDS2 N.A. N.A. <p>PLL Locking Module</p> Table 14: Available commands for the PLL locking module Cmd Value R/W Action Output Format Unit mux: # W Allow the user to select which signal is present on the DIVIDER MON out- put. Allowed values are:  0 DIVIDER MON switched o\ufb00.  2 DIVIDER MON set on RF.  4 DIVIDER MON set on LO. N.A. Int. sig: # W Set the sign of the PLL correction loop. Accepted values are:  0: negative correction loop.  1: positive correction loop. N.A. Int. pll: o\ufb00 W Switches o\ufb00 the PLL. N.A. N.A. on W Switches on the PLL. N.A. N.A. cp: ? R Returns the value of cp, which is the gain of the PLL. Must be switched ON. ## HEX. on W Switches ON the proportional gain of the PLL chip. N.A. N.A. o\ufb00 W Switches OFF the proportional gain of the PLL chip. N.A. N.A. # W Set the proportional gain. The value can range from 1 to 8. N.A. Int. ndiv: #### W Sets the divisor coe\ufb03cient for the RF frequency input. N.A. Int. rdiv: #### W Sets the divisor coe\ufb03cient for the LO frequency input. N.A. Int. pby: o\ufb00 W Sets the PLL correction loop in pro- portional only mode. N.A. N.A. on W Sets proportional-integrative mode. the PLL correction loop in N.A. N.A. tp: # W Sets the Integrative time constant of the PLL correction loop. Accepted values range from 0 to 3. N.A. Int. tz: # W Sets the Proportional gain of the PLL correction loop. Accepted val- ues range from 0 to 3. N.A. Int. hg: # W Sets the proportional gain of the PLL chip. Accepted values ranges from 0 to 3. N.A. Int. lk: o\ufb00 W Switches OFF the correction current injected by the PLL module into the Bias Current. N.A. N.A. on W Activates the correction current in- jected by the PLL module into the Bias Current. Overall modulation must be enabled for it to work. N.A. N.A. lm: ? R Returns the value of the PLL correc- tion loop output voltage. ####.## mV <p>PDH Locking Module</p> Table 15: Available commands for the PDH locking module Cmd Value R/W Action Output Format Unit pdhint: o\ufb00 W Sets the PDH correction loop in pro- portional only mode. N.A. N.A. on W Sets the PDH correction loop in proportional-integrative mode N.A. N.A. pdhhold: o\ufb00 W Deactivates the HOLD input of the PDH module. N.A. N.A. on W Activates the HOLD inptut of the PDH module. N.A. N.A. pdhlock: o\ufb00 W Deactivates the correction current in- jected into the Bias current by the PDH module. N.A. N.A. on W Activates the correction current in- jected into the Bias current by the PDH module. Overall modulation en- able must be active for it to work. N.A. N.A. pdhrint: # W Sets the \ufb01rst proportional gain of the PDH correction loop. Accepted val- ues range from 0 to 3. N.A. Int. pdhtz: # W Sets the second proportional gain of the PDH correction loop. Also a\ufb00ect the Integrative time constant. Ac- cepted values range from 0 to 3. N.A. Int. pdhtp: # W Sets the time constant of the PDH correction loop. Accepted values range from 0 to 3. N.A. Int. pdhmon: # W Sets which signal is present on the Monitor Output of the PDH module. Accepted values are:  0: Error Signal.  1: Correction signal. N.A. Int. pdhmonint: ? R Returns the values of the Error and Correction signals converted by the on board ADCs. ####.##: ####.## mV pdhvo\ufb00: ? R Returns the input o\ufb00set of the PDH correction loop. ####.## mV ####.## W Sets the input o\ufb00set of the PDH cor- rection loop. The value can range from 0 to 5000. Default is 2500. N.A. mV pdhdp: ? R Returns the PDH correction loop pre- ampli\ufb01er gain. ####.## mV ####.## W Sets the PDH coorection loop pre- ampli\ufb01er gain. Accepted values range from 0 to 63. N.A. mV <p>LIA Module</p> Table 16: Available commands for the LIA locking module Cmd Value R/W Action Output Format Unit lkpi: ? R Returns the mode of the correction loop:  0 stands for P mode.  1 stands for PI mode. # Bool. 0 W Sets the correction loop in P mode. N.A. Int. 1 W Sets the correction loop in PI mode. N.A. Int. lk\ufb02t: ? R Returns the status of the Low Pass Filter of the correction loop:  0 stands for inactive.  1 stands for active. # Bool. en W Activates Low Pass Filter N.A. N.A. dis W Deactivates Low Pass Filter N.A. N.A. lkgain: ? R Returns the VGA Gain. ####.## dB ####.## W Sets the VGA Gain N.A. dB lktp: ? R Returns the pole of the correction loop. # Int. # W Sets the pole of the correction loop. Accepted value ranges from 0 to 3. N.A. Int. lktz: ? R Returns the proportional gain of the correction loop. # Int. # W Sets the proportional gain of the cor- rection loop. Accepted values ranges from 0 to 3. N.A. Hz lktpb: ? R Returns the frequency setting for the Low Pass Filter of the correction loop. # Int. # W Sets the frequency setting for the Low Pass Filter of the correction loop. Ac- cepted value ranges from 0 to 3. N.A. mA lklock: on W Activates the LIA correction loop. N.A. N.A. o\ufb00 W Deactivates the LIA correction loop. N.A. N.A. lkdemod: ? R Returns the demodulation mode of the LIA.  0 stands for f mod.  1 stands for 2f mode.  2 stands for no deomdulation acrive. # Int. f W Sets the f demodulation mode N.A. N.A. 2f W Sets the 2f demodulation mode N.A. N.A. free W Deactivates the demodulation N.A. N.A. lkmon: ? R Returns the currently set for the out- put monitor of the LIA module:  0 stands for correction monitor.  1 stands for ERROR monitor. ####.## Deg. err W Sets the output monitor to show the ERROR signal. N.A. N.A. lock W Sets the output monitor to show the correction signal. N.A. N.A. lkIIR: ? R Returns the digital \ufb01lter currently in use:  1 stands for BP0. 2 stands for BP1. 3 stands for BP2. 4 stands for LP1. 5 stands for LP2. 6 stands for Notch. 7** stands for All Pass. # Int. BP0 W Sets the BP0 \ufb01lter N.A. N.A. BP1 W Sets the BP1 \ufb01lter N.A. N.A. BP2 W Sets the BP2 \ufb01lter N.A. N.A. LP0 W Sets the LP0LP0 \ufb01lter N.A. N.A. LP1 W Sets the LP1 \ufb01lter N.A. N.A. NOTCH W Sets the NOTCH \ufb01lter N.A. N.A. ALLPASS W Sets the ALLPASS \ufb01lter N.A. N.A. <p>QubeCL Instrument Status</p> Table 17: Available commands to check the instrument status Cmd Value R/W Action Output Format Unit vcc: ? R Returns the Supply Voltage for the CM Module measured by the QubeCL. ####.## V tsense: ? R Returns the internal Temperature of the QubeCL instrument. ####.## \u00b0C"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#14-customer-support-and-useful-contacts","title":"14. Customer support and useful contacts","text":"<p>The ppqSense sta\ufb00 can be reached for any problem or request concerning the QubeCL devices. To address any malfunctions or request help while working with our QubeCL, please write an email to qube.support@ppqsense.odoo.com, our sta\ufb00 will reply to the raised ticket as soon as possible. To obtain quotations, support or updates concerning the purchase of our instruments, please write an email to info@ppqsense.com.</p> <p>All the available documentation concerning both the QubeCL and all our other products can be found on our website: www.ppqsense.com.</p> <p>ppqSense s.r.l. Viale L. Ariosto 492/B 50019, Sesto Fiorentino (FI) Italy +39 055 80 23 943</p>"},{"location":"QubeCL_Current_Manual/QubeCL_Manual_v5.html#revision-history","title":"Revision History","text":"Revision Date Author(s) Description 1.0 2024.05.15 LM First redaction"},{"location":"tutorial/tutorial.html","title":"Reference for Site Editors","text":""},{"location":"tutorial/tutorial.html#reference-for-site-editors","title":"Reference for Site Editors","text":""},{"location":"tutorial/tutorial.html#introduction","title":"Introduction","text":"<p>This site uses MkDocs (a static site generator optimized for project documentation). The fundamental content of the site is stored in Markdown text files (a human-readable file format with build-in styling syntax) that can be edited in any text editor. </p> <p>Additional styling and functionality comes from the chosen theme Material for MkDocs and its plugins, CSS, and Python extensions. The entire site is hosted directly on github pages and can be exported to a formatted PDF for offline viewing.</p>"},{"location":"tutorial/tutorial.html#site-structure","title":"Site Structure","text":"<pre><code>.\n\u251c\u2500\u2500 /docs\n\u2502   \u251c\u2500\u2500 /QubeCL_Current_Manual\n    |   \u251c\u2500\u2500 QubeCL_Manual_v5.md\n\u2502   \u2502   \u251c\u2500\u2500 /assets_QubeCL_Manual_v5\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 /tables\n\u2502   |   |   \u2514\u2500\u2500 imgs.png\n\u2502   \u251c\u2500\u2500 index.md\n\u2502   \u251c\u2500\u2500 QubeCL_Manual_v5.md   \n\u2502   \u251c\u2500\u2500 downloads.md\n\u2502   \u251c\u2500\u2500 /downloads\n\u2502   \u251c\u2500\u2500 /img\n\u2502   \u2514\u2500\u2500 /javascripts\n\u251c\u2500\u2500 /ppq_theme\n\u2502   \u251c\u2500\u2500 /css\n\u2502   \u2502   \u2514\u2500\u2500 /img\n|   |   \u2514\u2500\u2500 ppq.css\n\u2502   \u251c\u2500\u2500 overrides\n\u2502   \u2514\u2500\u2500 partials\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 requirements.txt\n\u2514\u2500\u2500 /site\n</code></pre> <ul> <li><code>/docs</code> contains all the site content (text and images)<ul> <li><code>/QubeCL_Current_Manual</code> contains all files relating to Qube Manual<ul> <li><code>QubeCL_Manual_v5.md</code> main markdown document of manual</li> <li><code>/assets_QubeCL_Manual_v5</code> contains all assets for Qube Manual v5<ul> <li><code>/tables</code> contains csv files that are converted to tables in markdown</li> </ul> </li> </ul> </li> <li><code>/img</code> - images referenced in multiple site pages (ex. logo)</li> <li><code>/downloads</code> - files available for download from the site (ex. pdf of manual)</li> <li><code>downloads.md</code> - download list page</li> </ul> </li> <li><code>/ppq_theme</code> contains custom styling options for the site (color/font/etc)</li> <li><code>mkdocs.yml</code> configuration file (set site settings and enable/modify plugins)</li> <li><code>requirements.txt</code> list of dependencies to install for development purposes</li> <li><code>/site</code> - mkdocs generated site (do not modify directly)</li> <li><code>.github/ci.yml</code> (not shown) configuration file for auto-deploying github site</li> </ul>"},{"location":"tutorial/tutorial.html#editing-content","title":"Editing Content","text":"<p>If you just want to edit or add content to the site, you do not need to install the entire development environment, you can simply modify the desired pages in a text editor or directly on the main github site for small changes (navigate to the page of interest and select the edit-pencil button).</p> <p>NOTE:</p> <p>A basic editor will not give you a complete preview of the final site, but is sufficient to add content and confirm basic formatting. </p> <p>Figure 1: Github direct edit, preview and commit</p> <p>Figure 2: Github direct preview</p>"},{"location":"tutorial/tutorial.html#createedit-a-page","title":"Create/Edit a page","text":"<p>Each markdown (<code>.md</code>) file in the <code>/docs</code> directory represents a page on the website. </p> <p>If you create a new page (ex. <code>test.md</code>) and save it in the <code>/docs</code> folder, it will be accessable via the url <code>site.io/&lt;file_name&gt;.html</code> but it is not automatically added to the site navigation bar. To add it to the site nav, you first need to add it to the navigation structure in the <code>mkdocs.yml</code> file for it to be findable by users. Give the button a name and list the file path starting in docs: (<code>&lt;Button_Name&gt;: &lt;filepath/file_name&gt;</code>) </p><pre><code>nav:\n  - Home: index.md\n  - Qube Manual V5: QubeCL_Current_Manual/QubeCL_Manual_v5.md\n  - Downloads: downloads.md\n</code></pre>"},{"location":"tutorial/tutorial.html#updating-the-website","title":"Updating the website","text":"<p>If you are happy with your changes to the documentation and would like to update the site, all you have to do is <code>commit</code> and <code>push</code> your changes to the main github branch in order to automatically update the live version.</p> <p>If you have made changes directly to a single page at a time in github, all you have to do is save by selecting <code>commit changes</code> in the Github browser.</p> <p>If you are working locally or in a github code environment, you will have to follow a couple more steps to conform to git version control (See pushing to github)</p> <p>Saving incomplete work</p> <p>(if you are unsure of your changes, or if they are incomplete, please save them in an un-listed <code>.md</code> file or push to a new branch while working).  </p> <p>If you want to see a complete preview of the site before update, or if you would like to edit the styling or make additions to the plugins used in the site, please follow the intructions in the Comprensive Site Editing section, otherwise skip to the Markdown Guide section to learn more about content editing.    </p>"},{"location":"tutorial/tutorial.html#comprehensive-site-editing","title":"Comprehensive Site Editing","text":"<p>To edit the styling or functionality of the site (or to add multiple pages, images, or tables at once) it is best develop on a fully functional local or remote version (before updating the live site). </p>"},{"location":"tutorial/tutorial.html#recommended-workflow-with-git","title":"Recommended Workflow (with git)","text":"<p>This site is hosted on github, which is primarily a code-hosting and version-control tool. It allows for multiple people to collaborate on a project or document, but unlike a google docs or other live online editors, individuals make changes to local versions of the file(s) and those changes are periodically approved and merged into a main version of the file. This allows for controlled updating of a code base and detailed development tracking, while giving individuals the freedom to suggest changes or create new versions of the codebase at will. </p> <p>If you are unfamiliar with git workflows, in can be frustrating and confusing at first, but can ultimately make documenting work over time much easier. Here is a thorough git beginner tutorial that may be a helpful reference.</p> <p>Helpful Git Vocab/Concepts:</p> <ol> <li>Repository (The collection of all the files and folders constituting your project)</li> <li>Branch (A version of the repository you can edit/work in)<ol> <li>The default branch is <code>main</code></li> <li>making a new branch off of <code>main</code> creates a new copy of the repository at that point.</li> </ol> </li> <li>Remote/Local (You can fetch a github-hosted remote branch and work on it locally)<ol> <li>The local version of a remote branch is only visible on your machine or editor</li> <li>the remote version is visible to anyone who has access to the project</li> </ol> </li> <li>Syncing: (pushing local changes to the remote branch, pulling remote changes down to local branch)<ol> <li>Any local changes you make to a branch need to be pushed to the remote version for other users to see your changes</li> <li>If another user edits the remote version of the branch you are working on locally, you can pull their changes into your own version.</li> <li>git will automatically try and merge different users changes. If you and another user modify the same part of the codebase (ex. If you and someone else try and modify the same paragraph at the same time) - git will ask you to manually select what version you would like to keep.</li> </ol> </li> <li>Pull Requests (Requesting that your branch be merged into another branch -- usually <code>main</code>)<ol> <li>If you are making more than minor changes to the live website codebase, then you should make a branch off of <code>main</code> to work in (ex. <code>new-feature</code>).</li> <li>Once you are ready to update the main site with your changes, you submit a pull request to pull <code>new-feature</code> branch into the <code>main</code> branch.</li> <li>This will trigger a notification to the reviewer to look over your changes</li> <li>If they want to change something, or add comments, they can and you will be notified</li> <li>Once they approve your changes, you or they can merge your branch into <code>main</code> - this will trigger an update of the website.</li> </ol> </li> </ol> <p>See the Pushing to Github section for more details on how to actually perform these git operations.</p>"},{"location":"tutorial/tutorial.html#online-editing-setup","title":"Online Editing (setup)","text":"<p>You can use a live codespace in github instead of your local machine for development.</p> <p>Figure 3: Github online code editor with built-in markdown preview</p> <p>You can reach the live editor from your browser by changing the url of the project from <code>github.com/ppqSense/QubeDocs/</code> to <code>github.dev/ppqSense/QubeDocs/</code> and setting up a GitHub Codespace by opening up the terminal and selecting \"Continue Working in GitHub Codespaces\" and then a remote machine configuration. From here you can follow the rest of the instructions as you would locally (with the exception of needing to setup a python virtual environment).</p> <p>Figure 4: Open Terminal in Codespaces</p> <p>Figure 5: Continue with Codespaces</p> <p>Figure 6: Select Machine</p> <p>This option will take about a 2 minutes to setup, if it is your first time accessing the codespace (runs automated environment setup and configuration on startup). When finished, you can check that it is working by running <code>mkdocs build</code> and then <code>mkdocs serve</code>.</p> <p>See the github codespaces quickstart guide for more information on how codespaces work.</p>"},{"location":"tutorial/tutorial.html#local-editing-setup","title":"Local Editing (setup)","text":"<p>If you don't already know how to use github or don't have it installed, follow the readme instructions to setup your local environment. </p> <p>First: install <code>weasyprint</code> on your system: (used for PDF generation)</p> <ul> <li> <p><code>sudo apt install weasyprint</code> (Ubuntu)</p> </li> <li> <p>Executable download (Windows)</p> </li> <li> <p>All other systems</p> </li> </ul> <p>Second: While in a local <code>Python3</code> virtual environment (see readme) or codespace environment:</p> <ul> <li> <p>Navigate to the main project directory and run:</p> </li> <li> <p><code>pip install -r requirements.txt</code> to install all dependencies (do once)</p> </li> <li>Run <code>mkdocs build</code> to build out site structure and styling</li> <li>Run <code>mkdocs serve</code> to serve a live test site <ul> <li>Navigate to provided URL to see site</li> </ul> </li> </ul>"},{"location":"tutorial/tutorial.html#important-steps-for-local-online-editing","title":"Important Steps for Local &amp; Online Editing","text":"<p>Changes to content should be reflected automatically upon save if <code>mkdocs serve</code> is running.</p> <p>Site changes requiring rebuild</p> <p><code>mkdocs build</code> must be re-run upon changes to styling or plugins.</p> <p>Always update python requirements upon package install</p> <p>Any changes to the python environment (addition of extensions, etc.) should be reflected in the requirements.txt file. This can be updated with the following command from the main directory:</p> <ul> <li><code>pip freeze &gt; requirements.txt</code> (do before pushing changes - this is important to make sure that other editors can correctly setup their environment for testing).</li> </ul> <p>Every time the site is updated, a downloadable PDF version of the entire site is generated and available for download from the download page (currently it is saved as QubeCL_Manual.pdf, but that can be changed). At any time, if you would like to save a version of the site and manual, you can simply save the desired <code>.md</code> file along with its assets folder and PDF. By saving it under a new name in the <code>/docs/downloads</code> folder, the PDF can be added to the download page as a dated version of the manual.</p> <p>Disabling PDF Generation</p> <p>PDF generation can take up to 30 seconds each time. Disable during testing by following instructions in to-pdf plugin section.</p>"},{"location":"tutorial/tutorial.html#pushing-to-github","title":"Pushing to Github","text":"<p>If you are completely new to git see the  Guide for beginners or the more descriptive Atlassian Guide to git</p> <ul> <li>Option A: From Github Codespace: (Easier)</li> <li>Make your changes in the codespace</li> <li>Navigate to the source control tab via the git branch icon on the left</li> <li>write a commit message (describing of your changes).</li> <li> <p>Hit enter and follow instructions to push your change to the remote branch.   Figure 7: Git commit from Codespace</p> </li> <li> <p>Option B: From your local machine: (Advanced)</p> <ol> <li>Setup your computer's ssh-key (see README for details)</li> <li> <p>Clone down the repository <code>git clone &lt;repo&gt;</code> (see README for details)</p> </li> <li> <p>Follow best-practices with pushing and pulling to Github (via cmd terminal)</p> <ol> <li><code>git fetch</code> / <code>git pull</code> - make sure your local version is up to date with remote</li> <li><code>git branch</code> - check what branch you are on</li> <li>If necessary, switch branch with <code>git switch -c &lt;new branch name&gt;</code> or <code>git checkout &lt;remote branch name&gt;</code></li> <li>Make your desired changes on desired branch (branch = <code>main</code> if wanting to immediately update site)</li> <li><code>git status</code> - see which files you've changed</li> <li><code>git add &lt;files&gt;</code> - add specific files or <code>git add .</code> add all changed files</li> <li><code>git commit -m \"description of changes\"</code> - change message</li> <li><code>git push</code> - push changes to Github</li> <li><code>git status</code> / <code>git log</code> - confirm changes were saved</li> </ol> </li> <li>If you pushed directly to <code>main</code>, your changes will automatically be reflected on the site. If you pushed to another branch, you can continue to edit and push to that branch until you are ready to update the site.<ul> <li>When ready to update the site, follow Github instructions to make a pull request and merge your branch into <code>main</code></li> </ul> </li> </ol> </li> </ul> <p>### Pull Requests   Pull requests are a useful mechanism for introducing changes for review and having a dialog around those changes. Say for example you wanted to add a whole new Manual to the website - you probably would want to go through multiple interations and receive feedback before pushing your changes to the main site. </p> <p>Pull requests allow you to propose a change from one branch to another, with the ability for others to comment and recommend general or line-specific changes. Specific contributers can even be required to approve changes before the main branch can be updated.</p> <p>Here is a general guide on how pull requests work on github.</p> <p>Example pull request flow:</p> <p>Figure 8: Create Pull Request from test branch to main</p> <p>Figure 9: Define Pull Request - set reviewers and editors</p> <p>Figure 10: See changes in Pull Request - files and lines</p> <p>Figure 11: Add comments to pull request - inline and overall</p> <p>Figure 12: Finish and submit a review of a pull request</p> <p>Figure 13: Accept suggested changes to pull request</p> <p>Figure 14: Merge pull request into main (once all comments are resplved)</p>"},{"location":"tutorial/tutorial.html#guide-to-using-markdown","title":"Guide to using Markdown","text":"<p>Markdown is a simple text formatting language akin to HTML that has been widely adopted in recent years, particularly for documentation (github READMEs for example are markdown by default). It is extensible via tools such as mkdocs, python-markdown-extensions and many others, while also being legible in a standard text editor.</p>"},{"location":"tutorial/tutorial.html#useful-resources","title":"Useful resources","text":"<ul> <li>Basic Getting Started Guide to Markdown</li> <li>Getting started in mkdocs flavor of markdown (additional built-in features)</li> </ul>"},{"location":"tutorial/tutorial.html#common-tasks-requiring-more-than-text-and-structure-syntax","title":"Common tasks requiring more than text and structure syntax","text":"<ul> <li> <p>Embedding an image:</p> <pre><code>[Description of Image](/path/to/image/from/docs.png){#image-tag}\n</code></pre> </li> <li> <p>Adding a Table: Building a table in markdown is similar to LaTeX. You must draw out the columns and rows which can be tedious.</p> </li> </ul> <pre><code>|   H1   |   H2   |   H3   |\n|--------|--------|--------|\n|      1 |      2 |      3 |\n|      4 |      5 |      6 |\n</code></pre> <p>Becomes:</p> Table 1: Example Table H1 H2 H3 1 2 3 4 5 6 <p>Build a correctly-formatted table a bit quicker using a table generator site</p> <p>Or use the tables extension to import from CSV.</p> <ul> <li>Referencing an anchor:   You can create an anchor point to a header, figure, table, or piece of text by adding {#anchor-name} to the end of it. and link to it by using this syntax:</li> </ul> <pre><code>[this](#anchor-name)\n</code></pre> <p>This works even across pages if you include the page's file path from your current location before the hashtag.</p> <p><code>[this](../QubeCL_Current_Manual/QubeCL_Manual_v5.md#pwr_specs</code></p> <p>becomes....</p> <p>this</p> <p>If you have a figure or a table that was created using the caption extension, you can leave the square brackets blank when referencing it and the correct table or figure number will be populated instead.</p> <p><code>[](#figure-of-choice)</code></p> <p>becomes....   </p>"},{"location":"tutorial/tutorial.html#useful-pluginsextensionstools","title":"Useful plugins/extensions/tools","text":"<p>Additional functionality has been added to this site via various python extensions. You can access these features by using the correct syntax described below.</p> <p>To see a full list of built-in plugins and supported extensions visit: mk-material plugins, and Python Markdown extensions pages.</p>"},{"location":"tutorial/tutorial.html#abmonition","title":"Abmonition","text":"<p>Allows the user to add colorful callouts/notes/drop-downs to the main text:</p> <pre><code>!!! note \"Like This\"\n    Put your message here\n</code></pre> <p>Like This</p> <p>Put your message here</p> <p>See Admonition Plugin page for more examples.</p>"},{"location":"tutorial/tutorial.html#autoref","title":"Autoref","text":"<p>Allows you to reference headers by name without creating anchor tags ex. <code>[Link Description](#Autoref)</code>.</p> <p>Link Description should take you to this subsection.</p>"},{"location":"tutorial/tutorial.html#tables","title":"Tables","text":"<p>This plugin allows for the insertion of tables in a more programmatic way.</p> <p>You can add a csv file to the <code>/docs</code> folder and have it be auto-generated by the python <code>mkdocs-table-reader-plugin</code> (less formatting control but good for large datasets that might be modified regularly)</p> <p>To use enter in markdown:  </p><pre><code>\\{{ read_csv('path_to_table.csv') }\\}\n</code></pre>"},{"location":"tutorial/tutorial.html#markdown_katex","title":"Markdown_katex","text":"<p>Use latex-style math notation in your markdown like so:</p> <p>Inline KaTeX...</p> <pre><code>$`a^2+b^2=c^2`$.\n</code></pre> <p>...looks like this: a2+b2=c2a^2+b^2=c^2a2+b2=c2.</p> <p>Multi-line KaTeX block...</p> <p></p><pre><code>  ```math\n  f(x) = \\int_{-\\infty}^\\infty\n  \\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\n  ,d\\xi\n  ```\n</code></pre> ...looks like this: <p>f(x)=\u222b\u2212\u221e\u221ef^(\u03be) e2\u03c0i\u03bex d\u03be f(x) = \\int_{-\\infty}^\\infty \\hat f(\\xi)\\,e^{2 \\pi i \\xi x} \\,d\\xi f(x)=\u222b\u2212\u221e\u221e\u200bf^\u200b(\u03be)e2\u03c0i\u03bexd\u03be</p> <p>See full syntax guide here</p>"},{"location":"tutorial/tutorial.html#caption","title":"Caption","text":"<p>Create a Caption and a tag of a table or image like so: <code>&lt;Table/Figure&gt;: &lt;Description&gt; {#tag}</code>  and leave a space between the caption line and the figure/table.</p> <p>Ex:</p> <pre><code>Tabl\u00e8: Power source voltages speci\ufb01cations{#pwr_specs}\n\n|DC Input |minimum |typical | maximum |\n|---|---|---|---|\n| LAS | +20 V | +24 V | +30 V | \n| TEC | +8 V | +12 V | +24 V |\n</code></pre> <p>becomes: </p> Table 2: Power source voltages speci\ufb01cations DC Input minimum typical maximum LAS +20 V +24 V +30 V TEC +8 V +12 V +24 V <p>or</p> <pre><code>![Figure Caption](assets_QubeCL_Manual_v5/img-0942.png){#front_panel}\n</code></pre> <p>becomes: Figure 15: Figure Caption</p> <p>(Note that square brackets are blank - this allows for the figure or table number to be auto-generated when figure tag (<code>(#front_panel)</code>) is referenced.</p> <p>And reference it like so: </p><pre><code>A schematic view of the front panel of the QubeCL can be seen in [](#front_panel).\n</code></pre> <p>A schematic view of the front panel of the QubeCL can be seen in .</p>"},{"location":"tutorial/tutorial.html#mdx-spanner","title":"mdx-spanner","text":"<p>Allows for row and column-spanning in markdown tables as well as advanced text alignment</p> <p>You can activate colspan by putting only ~~ in a cell. This will merge the cell with the cell in the previous column.</p> <p>You can activate rowspan by putting __ in a cell. This will merge the cell with the cell in the previous row. If the cell in previous row is empty it will continue to merge until it finds a non-empty cell.</p> <p>Sample:</p> Header 1 Header 2 Header 3 Value 1 Value 2 Value 3 Value 5 Value 6 Value 7 Value 8 <p>This should result in the following table:</p> <p>+----------+----------+----------+ | Header 1 | Header 2 | Header 3 | +----------+----------+----------+ | Value 1             | Value 2  | |                     +----------+ |                     | Value 3  | |                     +----------+ |                     | Value 5  | +----------+----------+----------+ | Value 6  | Value 7  | Value 8  | +----------+----------+----------+</p> <p>See mdx-spanner for full documentation.</p>"},{"location":"tutorial/tutorial.html#to-pdf","title":"To-pdf","text":"<p>Whenever the site is rebuilt  (<code>mkdocs serve</code> or <code>mkdocs build</code>) it is saved in a pdf format to the downloads folder. This takes a few seconds. If you are testing locally and don't want to regenerate it each time, you can suppress this feature by uncommenting the following line in the <code>mkdocs.yml</code> (remember to comment out when done editing).</p> <pre><code>  - to-pdf: # enable to auto-generate PDF download(currently for whole site)  \n      ...\n      enabled_if_env: ENABLED_PDF_EXPORT #uncomment this line to \n</code></pre>"},{"location":"tutorial/tutorial.html#additional-features-that-may-be-added-later","title":"Additional features that may be added later","text":"<ul> <li>automatic \"table of figures\" generation</li> <li>automated versioning</li> <li>multiple PDF file generation (generate static version of multiple seperate pages)</li> </ul>"},{"location":"tutorial/tutorial.html#markdown-experimentation","title":"Markdown Experimentation","text":"<p>(Feel free to add/experiment here in this section)</p> <p></p><pre><code>---\n# Header 1\n## Header 2\n### Header 3\n*italics*\n**bold**\n&gt; quote\n---\n</code></pre> Becomes..."},{"location":"tutorial/tutorial.html#header-1","title":"Header 1","text":""},{"location":"tutorial/tutorial.html#header-2","title":"Header 2","text":""},{"location":"tutorial/tutorial.html#header-3","title":"Header 3","text":"<p>italics bold</p> <p>quote</p>"}]}